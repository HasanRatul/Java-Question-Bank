{
  "questions": [
    {
      "correctAns": "4",
      "explaination": "Char occupies 16-bit in memory, so it supports 2^16 i:e from 0 to 65535.",
      "mark": "2",
      "options1": "-128 to 127",
      "options2": "0 to 256",
      "options3": "0 to 32767",
      "options4": "0 to 65535",
      "qsn": "What is the numerical range of a char data type in Java?",
      "qsnNumber": "1"
    },
    {
      "correctAns": "3",
      "explaination": " Unicode defines fully international character set that can represent all the characters found in all human languages. Its range is from 0 to 65536.",
      "mark": "2",
      "options1": "ASCII",
      "options2": "ISO-LATIN-1",
      "options3": "UNICODE",
      "options4": "None of the mentioned",
      "qsn": "Which of these coding types is used for data type characters in Java?",
      "qsnNumber": "2"
    },
    {
      "correctAns": "1",
      "explaination": "Boolean variable can contain only one of two possible values, true and false.",
      "mark": "2",
      "options1": "True & False",
      "options2": "0 & 1",
      "options3": "Any integer value",
      "options4": "true",
      "qsn": "Which of these values can a boolean variable contain?",
      "qsnNumber": "3"
    },
    {
      "correctAns": "4",
      "explaination": "First 0 to 127 character set in Unicode are same as those of ISO-LATIN-1 and ASCII.",
      "mark": "2",
      "options1": "ASCII",
      "options2": "ISO-LATIN-1",
      "options3": "None of the mentioned",
      "options4": "ASCII and ISO-LATIN1",
      "qsn": "Which of these occupy first 0 to 127 in Unicode character set used for characters in Java?",
      "qsnNumber": "4"
    },
    {
      "correctAns": "3",
      "explaination": " Boolean can only be assigned true or false literals.",
      "mark": "2",
      "options1": "boolean b1 = 1;",
      "options2": "boolean b2 = ‘false’;",
      "options3": "boolean b3 = false;",
      "options4": "boolean b4 = ‘true’",
      "qsn": "Which one is a valid declaration of a boolean?",
      "qsnNumber": "5"
    },
    {
      "correctAns": "1",
      "explaination": "An expression involving bytes, ints, shorts, literal numbers, the entire expression is promoted to int before any calculation is done.",
      "mark": "2",
      "options1": "int",
      "options2": "long",
      "options3": "byte",
      "options4": "float",
      "qsn": "An expression involving byte, int, and literal numbers is promoted to which of these?",
      "qsnNumber": "6"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "int",
      "options2": "float",
      "options3": "double",
      "options4": "long",
      "qsn": "Which data type value is returned by all transcendental math functions?",
      "qsnNumber": "7"
    },
    {
      "correctAns": "1",
      "explaination": "The compareTo() method is implemented to order the variable in ascending order.",
      "mark": "2",
      "options1": "Ascending order",
      "options2": "Descending order",
      "options3": "Random order",
      "options4": "depends on the order() method",
      "qsn": "What is the order of variables in Enum?",
      "qsnNumber": "8"
    },
    {
      "correctAns": "1",
      "explaination": "Tree Set will sort the values in the order in which Enum constants are declared.",
      "mark": "2",
      "options1": "Sorted in the order of declaration of Enums",
      "options2": "Sorted in alphabetical order of Enums",
      "options3": "Sorted based on order() method",
      "options4": "Sorted in descending order of names of Enums",
      "qsn": "If we try to add Enum constants to a TreeSet, what sorting order will it use?",
      "qsnNumber": "9"
    },
    {
      "correctAns": "2",
      "explaination": "getEnumConstants() returns the elements of this enum class or null if this Class object does not represent an enum type.",
      "mark": "2",
      "options1": "getEnums()",
      "options2": "getEnumConstants()",
      "options3": "getEnumList()",
      "options4": "getEnum()",
      "qsn": "Which method returns the elements of Enum class?",
      "qsnNumber": "10"
    },
    {
      "correctAns": "4",
      "explaination": "BigDecimal has unnatural syntax, needs more memory and creates great amount of garbage. But it has high precision which is useful for some calculations like money.",
      "mark": "2",
      "options1": "Syntax",
      "options2": "Memory usage",
      "options3": "Garbage creation",
      "options4": "Precision",
      "qsn": "Which of the following is the advantage of BigDecimal over double?",
      "qsnNumber": "11"
    },
    {
      "correctAns": "4",
      "explaination": "int, float, double provide overloaded methods for +,-,* and /. BigDecimal does not provide these overloaded methods.",
      "mark": "2",
      "options1": "int",
      "options2": "float",
      "options3": "double",
      "options4": "BigDecimal",
      "qsn": "Which of the below data type doesn’t support overloaded methods for +,-,* and /?",
      "qsnNumber": "12"
    },
    {
      "correctAns": "3",
      "explaination": "A BigDecimal is n*10^scale where n is an arbitrary large signed integer. Scale can be thought of as the number of digits to move the decimal point to left or right.",
      "mark": "2",
      "options1": "Base 2",
      "options2": "Base 8",
      "options3": "Base 10",
      "options4": "Base e",
      "qsn": "What is the base of BigDecimal data type?",
      "qsnNumber": "13"
    },
    {
      "correctAns": "4",
      "explaination": "toString() of BigDecimal uses scientific notation to represent numbers known as canonical representation. We must use toPlainString() to avoid scientific notation.",
      "mark": "2",
      "options1": "There is no limitation",
      "options2": "toString returns null",
      "options3": "toString returns the number in expanded form",
      "options4": "toString uses scientific notation",
      "qsn": "What is the limitation of toString() method of BigDecimal?",
      "qsnNumber": "14"
    },
    {
      "correctAns": "2",
      "explaination": "toBigInteger() converts BigDecimal to a BigInteger.toBigIntegerExact() converts this BigDecimal to a BigInteger by checking for lost information.",
      "mark": "2",
      "options1": "scale manipulation",
      "options2": "+ operator",
      "options3": "rounding",
      "options4": "hashing",
      "qsn": "Which of the following is not provided by BigDecimal?",
      "qsnNumber": "15"
    },
    {
      "correctAns": "2",
      "explaination": "BigDecimal is a part of java.math. This package provides various classes for storing numbers and mathematical operations.",
      "mark": "2",
      "options1": "java.lang",
      "options2": "java.math",
      "options3": "java.util",
      "options4": "java.io",
      "qsn": "BigDecimal is a part of which package?",
      "qsnNumber": "16"
    },
    {
      "correctAns": "4",
      "explaination": "BigDecimal.ONE is a static variable of BigDecimal class with value 1 on scale 0.",
      "mark": "2",
      "options1": "wrong statement",
      "options2": "custom defined statement",
      "options3": "static variable with value 1 on scale 10",
      "options4": "static variable with value 1 on scale 0",
      "qsn": "What is BigDecimal.ONE?",
      "qsnNumber": "17"
    },
    {
      "correctAns": "1",
      "explaination": "MathContext class is a library of functions to perform arithmetic operations of BigInteger and BigDecimal.",
      "mark": "2",
      "options1": "MathContext",
      "options2": "MathLib",
      "options3": "BigLib",
      "options4": "BigContext",
      "qsn": "Which class is a library of functions to perform arithmetic operations of BigInteger and BigDecimal?",
      "qsnNumber": "18"
    },
    {
      "correctAns": "3",
      "explaination": "public abstract boolean useDaylightTime() is provided in TimeZone class.",
      "mark": "2",
      "options1": "useDaylightTime() of Time class",
      "options2": "useDaylightTime() of Date class",
      "options3": "useDaylightTime() of TimeZone class",
      "options4": "useDaylightTime() of DateTime class",
      "qsn": "How to identify if a timezone is eligible for DayLight Saving?",
      "qsnNumber": "19"
    },
    {
      "correctAns": "1",
      "explaination": "java.sql.Date is the datatype of Date stored in database.",
      "mark": "2",
      "options1": "java.sql.Date",
      "options2": "java.util.Date",
      "options3": "java.sql.DateTime",
      "options4": "java.util.DateTime",
      "qsn": "How is Date stored in database?",
      "qsnNumber": "20"
    },
    {
      "correctAns": "2",
      "explaination": "LocalTime of joda library represents time without date.",
      "mark": "2",
      "options1": "Date without time",
      "options2": "Time without Date",
      "options3": "Date and Time",
      "options4": "Date and Time with timezone",
      "qsn": "What does LocalTime represent?",
      "qsnNumber": "21"
    },
    {
      "correctAns": "3",
      "explaination": "In java 8, Instant.now() provides current time in UTC/GMT.",
      "mark": "2",
      "options1": "Time.getUTC();",
      "options2": "Date.getUTC();",
      "options3": "Instant.now();",
      "options4": "TimeZone.getUTC();",
      "qsn": "How to get UTC time?",
      "qsnNumber": "22"
    },
    {
      "correctAns": "4",
      "explaination": "We can use binary ampersand operator on integers/chars (and it returns an integer) or on booleans (and it returns a boolean).",
      "mark": "2",
      "options1": "Integer",
      "options2": "Boolean",
      "options3": "Character",
      "options4": "Integer or Boolean",
      "qsn": "Which of these can be returned by the operator & ?",
      "qsnNumber": "23"
    },
    {
      "correctAns": "4",
      "explaination": "Data type long literals are appended by an upper or lowercase L.",
      "mark": "2",
      "options1": "L",
      "options2": "l",
      "options3": "D",
      "options4": "L and I",
      "qsn": "Literals in java must be appended by which of these?",
      "qsnNumber": "24"
    },
    {
      "correctAns": "4",
      "explaination": "None",
      "mark": "2",
      "options1": "integer",
      "options2": "float",
      "options3": "boolean",
      "options4": "all of the mentioned",
      "qsn": "Literal can be of which of these data types?",
      "qsnNumber": "25"
    },
    {
      "correctAns": "2",
      "explaination": "Keywords are specially reserved words which can not be used for naming a user defined variable, example : class, int, for etc.",
      "mark": "2",
      "options1": "identifier",
      "options2": "keyword",
      "options3": "identifier & keyword",
      "options4": "none of the mentioned",
      "qsn": "Which of these can not be used for a variable name in Java?",
      "qsnNumber": "26"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "The destination type is smaller than source type",
      "options2": "The destination type is larger than source type",
      "options3": "The destination type can be larger or smaller than source type",
      "options4": "None of the mentioned",
      "qsn": "Which of these is necessary condition for automatic type conversion in Java?",
      "qsnNumber": "27"
    },
    {
      "correctAns": "3",
      "explaination": "If any operand is double the result of expression is double.",
      "mark": "2",
      "options1": "long",
      "options2": "int",
      "options3": "double",
      "options4": "float",
      "qsn": "If an expression contains double, int, float, long, then whole expression will promoted into which of these data types?",
      "qsnNumber": "28"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "Floating-point value assigned to an integer type",
      "options2": "Integer value assigned to floating type",
      "options3": "Floating-point value assigned to an Floating type",
      "options4": "Integer value assigned to floating type",
      "qsn": "What is Truncation is Java?",
      "qsnNumber": "29"
    },
    {
      "correctAns": "3",
      "explaination": "Operator new allocates block of memory specified by the size of array, and gives the reference of memory allocated to the array variable.",
      "mark": "2",
      "options1": "malloc",
      "options2": "alloc",
      "options3": "new",
      "options4": "new malloc",
      "qsn": "Which of these operators is used to allocate memory to array variable in Java?",
      "qsnNumber": "30"
    },
    {
      "correctAns": "1",
      "explaination": "Array can be initialized using both new and comma separated expressions surrounded by curly braces example : int arr[5] = new int[5]; and int arr[] = { 0, 1, 2, 3, 4};",
      "mark": "2",
      "options1": "It is necessary to use new operator to initialize an array.",
      "options2": "Array can be initialized using comma separated expressions surrounded by curly braces.",
      "options3": "Array can be initialized when they are declared.",
      "options4": "None of the mentioned",
      "qsn": "Which of these is an incorrect Statement?",
      "qsnNumber": "31"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "Row",
      "options2": "Column",
      "options3": "Both Row and Column",
      "options4": "None of the mentioned",
      "qsn": "Which of these is necessary to specify at time of array initialization?",
      "qsnNumber": "32"
    },
    {
      "correctAns": "4",
      "explaination": "Operator new must be succeeded by array type and array size. The order is important and determines the type of variable.",
      "mark": "2",
      "options1": "int arr[] = new int[5] ;",
      "options2": "int [] arr = new int[5] ;",
      "options3": "int arr[]; arr = new int[5];",
      "options4": "int arr[] = int [5] new;",
      "qsn": "Which of these is an incorrect array declaration?",
      "qsnNumber": "33"
    },
    {
      "correctAns": "4",
      "explaination": "Generics gives the flexibility to strongly typecast collections. Generics is applicable to Set, List and Tree. It is not applicable to Array.",
      "mark": "2",
      "options1": "Set",
      "options2": "List",
      "options3": "Tree",
      "options4": "Array",
      "qsn": "Generics does not work with?",
      "qsnNumber": "34"
    },
    {
      "correctAns": "2",
      "explaination": "Arrays class contains various methods for manipulating arrays (such as sorting and searching). Array is not a valid class.",
      "mark": "2",
      "options1": "Array.sort()",
      "options2": "Arrays.sort()",
      "options3": "Collection.sort()",
      "options4": "System.sort()",
      "qsn": "How to sort an array?",
      "qsnNumber": "35"
    },
    {
      "correctAns": "1",
      "explaination": "Arrays class contains various methods for manipulating arrays (such as sorting and searching). Array is not a valid class.",
      "mark": "2",
      "options1": "System.arrayCopy()",
      "options2": "Array.copy()",
      "options3": "Arrays.copy()",
      "options4": "Collection.copy()",
      "qsn": "How to copy contents of array?",
      "qsnNumber": "36"
    },
    {
      "correctAns": "1",
      "explaination": " Array is stored in heap space.Whenever an object is created, it’s always stored in the Heap space and stack memory contains the reference to it.",
      "mark": "2",
      "options1": "heap space",
      "options2": "stack space",
      "options3": "heap space and stack space",
      "options4": "first generation memory",
      "qsn": "Where is array stored in memory?",
      "qsnNumber": "37"
    },
    {
      "correctAns": "1",
      "explaination": "Array elements are stored in contiguous memory.Linked List is stored in random memory locations.",
      "mark": "2",
      "options1": "Sequential",
      "options2": "Random",
      "options3": "Sequential and Random",
      "options4": "Binary search",
      "qsn": "An array elements are always stored in ________ memory locations?",
      "qsnNumber": "38"
    },
    {
      "correctAns": "4",
      "explaination": "The operand of arithmetic operators can be any of numeric or character type, But not boolean.",
      "mark": "2",
      "options1": "Numeric",
      "options2": "Boolean",
      "options3": "Characters",
      "options4": "Both Numeric & Characters",
      "qsn": "Which of the following can be operands of arithmetic operators?",
      "qsnNumber": "39"
    },
    {
      "correctAns": "3",
      "explaination": "Modulus operator can be applied to both integers and floating point numbers. .",
      "mark": "2",
      "options1": "Integers",
      "options2": "Floating – point numbers",
      "options3": "Both Integers and floating – point numbers.",
      "options4": "None of the mentioned",
      "qsn": "Modulus operator, %, can be applied to which of these?",
      "qsnNumber": "40"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "1",
      "options2": "2",
      "options3": "3",
      "options4": "4",
      "qsn": "Decrement operator, −−, decreases value of variable by what number?",
      "qsnNumber": "41"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "Assignment operators are more efficiently implemented by Java run-time system than their equivalent long forms.",
      "options2": "Assignment operators run faster than their equivalent long forms.",
      "options3": "Assignment operators can be used only with numeric and character data type.",
      "options4": "None",
      "qsn": "Which of these statements are incorrect?",
      "qsnNumber": "42"
    },
    {
      "correctAns": "4",
      "explaination": "<= is a relational operator.",
      "mark": "2",
      "options1": "&",
      "options2": "&=",
      "options3": "|=",
      "options4": "<=",
      "qsn": "Which of these is not a bitwise operator?",
      "qsnNumber": "43"
    },
    {
      "correctAns": "1",
      "explaination": "Unary not operator, ~, inverts all of the bits of its operand in binary representation.",
      "mark": "2",
      "options1": "~",
      "options2": "<<<",
      "options3": ">>>",
      "options4": "^",
      "qsn": "Which operator is used to invert all the digits in binary representation of a number?",
      "qsnNumber": "44"
    },
    {
      "correctAns": "4",
      "explaination": "The left shift operator shifts all of the bits in a value to the left specified number of times. For each shift left, the high order bit is shifted out and lost, zero is brought in from right. When a left shift is applied to an integer operand, bits are lost once they are shifted past the bit position 31.",
      "mark": "2",
      "options1": "1",
      "options2": "32",
      "options3": "33",
      "options4": "31",
      "qsn": "On applying Left shift operator, <<, on an integer bits are lost one they are shifted past which position bit?",
      "qsnNumber": "45"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "<<",
      "options2": ">>",
      "options3": "<<=",
      "options4": ">>=",
      "qsn": "Which right shift operator preserves the sign of the value?",
      "qsnNumber": "46"
    },
    {
      "correctAns": "4",
      "explaination": "The right shift operator automatically fills the higher order bit with its previous contents each time a shift occurs. This also preserves the sign of the value.",
      "mark": "2",
      "options1": "The left shift operator, <<, shifts all of the bits in a value to the left specified number of times",
      "options2": "The right shift operator, >>, shifts all of the bits in a value to the right specified number of times",
      "options3": "The left shift operator can be used as an alternative to multiplying by 2",
      "options4": "The right shift operator automatically fills the higher order bits with 0",
      "qsn": "Which of these statements are incorrect?",
      "qsnNumber": "47"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "Integer",
      "options2": "Boolean",
      "options3": "Characters",
      "options4": "Double",
      "qsn": "What is the output of relational operators?",
      "qsnNumber": "48"
    },
    {
      "correctAns": "3",
      "explaination": "All relational operators return a boolean value ie. true and false.",
      "mark": "2",
      "options1": "Integers",
      "options2": "Floating – point numbers",
      "options3": "Boolean",
      "options4": "None of the mentioned",
      "qsn": "Which of these is returned by “greater than”, “less than” and “equal to” operators?",
      "qsnNumber": "49"
    },
    {
      "correctAns": "4",
      "explaination": "Operator short circuit and, &&, and short circuit or, ||, skip evaluating right hand operand when output can be determined by left operand alone.",
      "mark": "2",
      "options1": "!",
      "options2": "|",
      "options3": "&",
      "options4": "&&",
      "qsn": "Which of these operators can skip evaluating right hand operand?",
      "qsnNumber": "50"
    },
    {
      "correctAns": "4",
      "explaination": "True and false are keywords, they are non numeric values which do no relate to zero or non zero numbers. true and false are boolean values.",
      "mark": "2",
      "options1": "true and false are numeric values 1 and 0",
      "options2": "true and false are numeric values 0 and 1",
      "options3": "true is any non zero value and false is 0",
      "options4": "true and false are non numeric values",
      "qsn": "Which of these statement is correct?",
      "qsnNumber": "51"
    },
    {
      "correctAns": "1",
      "explaination": "Order of precedence is (highest to lowest) a -> b -> c -> d.",
      "mark": "2",
      "options1": "()",
      "options2": "++",
      "options3": "*",
      "options4": ">>",
      "qsn": "Which of these have highest precedence?",
      "qsnNumber": "52"
    },
    {
      "correctAns": "3",
      "explaination": "Division operator, /, has equal precedence as of multiplication operator. In expression involving multiplication and division evaluation of expression will begin from right side when no brackets are used.",
      "mark": "2",
      "options1": "Equal to operator has least precedence",
      "options2": "Brackets () have highest precedence",
      "options3": "Division operator, /, has higher precedence than multiplication operator",
      "options4": "Addition operator, +, and subtraction operator have equal precedence",
      "qsn": "Which of these statements are incorrect?",
      "qsnNumber": "53"
    },
    {
      "correctAns": "2",
      "explaination": "Switch statements checks for equality between the controlling variable and its constant cases.",
      "mark": "2",
      "options1": "if",
      "options2": "switch",
      "options3": "if & switch",
      "options4": "none of the mentioned",
      "qsn": "Which of these selection statements test only for equality?",
      "qsnNumber": "54"
    },
    {
      "correctAns": "1",
      "explaination": "Continue and break are jump statements, and for is an looping statement.",
      "mark": "2",
      "options1": "if()",
      "options2": "for()",
      "options3": "continue",
      "options4": "break",
      "qsn": "Which of these are selection statements in Java?",
      "qsnNumber": "55"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "do-while",
      "options2": "while",
      "options3": "for",
      "options4": "none of the mentioned",
      "qsn": "Which of the following loops will execute the body of loop even when condition controlling the loop is initially false?",
      "qsnNumber": "56"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "break",
      "options2": "return",
      "options3": "exit",
      "options4": "continue",
      "qsn": "Which of these jump statements can skip processing remainder of code in its body for a particular iteration?",
      "qsnNumber": "57"
    },
    {
      "correctAns": "2",
      "explaination": "No two case constants in the same switch can have identical values.",
      "mark": "2",
      "options1": "switch statement is more efficient than a set of nested ifs",
      "options2": "two case constants in the same switch can have identical values",
      "options3": "switch statement can only test for equality, whereas if statement can evaluate any type of boolean expression",
      "options4": "it is possible to create a nested switch statements",
      "qsn": "Which of these statement is incorrect?",
      "qsnNumber": "58"
    },
    {
      "correctAns": "2",
      "explaination": "Break halts the execution and forces the control out of the loop.",
      "mark": "2",
      "options1": "Break stops the execution of entire program",
      "options2": "Break halts the execution and forces the control out of the loop",
      "options3": "Break forces the control out of the loop and starts the execution of next iteration.",
      "options4": "Break halts the execution of the loop for certain time frame",
      "qsn": "What is true about break?",
      "qsnNumber": "59"
    },
    {
      "correctAns": "1",
      "explaination": "Do statement checks the condition at the end of the loop. Hence, code gets executed at least once.",
      "mark": "2",
      "options1": "do statement executes the code of a loop at least once",
      "options2": "do statement does not get execute if condition is not matched in the first iteration",
      "options3": "do statement checks the condition at the beginning of the loop",
      "options4": "do statement executes the code more than once always",
      "qsn": "What is true about do statement?",
      "qsnNumber": "60"
    },
    {
      "correctAns": "3",
      "explaination": "Break is used with switch statement to shift control out of switch.",
      "mark": "2",
      "options1": "Continue",
      "options2": "Exit",
      "options3": "break",
      "options4": "do",
      "qsn": "Which of the following is used with switch statement?",
      "qsnNumber": "61"
    },
    {
      "correctAns": "4",
      "explaination": "do-while is an iteration statement. Others are decision making statements.",
      "mark": "2",
      "options1": "if",
      "options2": "if-else",
      "options3": "switch",
      "options4": "do-while",
      "qsn": "Which of the following is not a decision making statement?",
      "qsnNumber": "62"
    },
    {
      "correctAns": "2",
      "explaination": "break, continue and return transfer control to another part of the program and returns back to caller after execution. However, goto is marked as not used in Java.",
      "mark": "2",
      "options1": "break",
      "options2": "goto",
      "options3": "continue",
      "options4": "return",
      "qsn": "Which of the following is not a valid jump statement?",
      "qsnNumber": "63"
    },
    {
      "correctAns": "4",
      "explaination": "The break statement causes an exit from innermost loop or switch.",
      "mark": "2",
      "options1": "Only from innermost loop",
      "options2": "Terminates a program",
      "options3": "Only from innermost switch",
      "options4": "From innermost loops or switches",
      "qsn": "From where break statement causes an exit?",
      "qsnNumber": "65"
    },
    {
      "correctAns": "1",
      "explaination": "exit() is not a flow control statement in Java. exit() terminates the currently running JVM.",
      "mark": "2",
      "options1": "exit()",
      "options2": "break",
      "options3": "continue",
      "options4": "return",
      "qsn": "Which of the following is not a valid flow control statement?",
      "qsnNumber": "66"
    },
    {
      "correctAns": "4",
      "explaination": "There are 4 OOPS concepts in Java. Inheritance, Encapsulation, Polymorphism and Abstraction.",
      "mark": "2",
      "options1": "Inheritance",
      "options2": "Encapsulation",
      "options3": "Polymorphism",
      "options4": "Compilation",
      "qsn": "Which of the following is not OOPS concept in Java?",
      "qsnNumber": "67"
    },
    {
      "correctAns": "1",
      "explaination": "There are two type of polymorphism in Java. Compile time polymorphism (overloading) and runtime polymorphism (overriding).",
      "mark": "2",
      "options1": "Compile time polymorphism",
      "options2": "Execution time polymorphism",
      "options3": "Multiple polymorphism",
      "options4": "Multilevel polymorphism",
      "qsn": "Which of the following is a type of polymorphism in Java?",
      "qsnNumber": "68"
    },
    {
      "correctAns": "2",
      "explaination": "Overloading is determined at compile time. Hence, it is also known as compile time polymorphism.",
      "mark": "2",
      "options1": "At run time",
      "options2": "At compile time",
      "options3": "At coding time",
      "options4": "At execution time",
      "qsn": "When does method overloading is determined?",
      "qsnNumber": "69"
    },
    {
      "correctAns": "4",
      "explaination": "Overloading occurs when more than one method with same name but different constructor and also when same signature but different number of parameters and/or parameter type.",
      "mark": "2",
      "options1": "More than one method with same name but different method signature and different number or type of parameters",
      "options2": "More than one method with same name, same signature but different number of signature",
      "options3": "More than one method with same name, same signature, same number of parameters but different type",
      "options4": "More than one method with same name, same number of parameters and type but different signature",
      "qsn": "When Overloading does not occur?",
      "qsnNumber": "70"
    },
    {
      "correctAns": "3",
      "explaination": "Abstraction is concept of defining real world objects in terms of classes or interfaces.",
      "mark": "2",
      "options1": "Polymorphism",
      "options2": "Encapsulation",
      "options3": "Abstraction",
      "options4": "Inheritance",
      "qsn": "Which concept of Java is a way of converting real world objects in terms of class?",
      "qsnNumber": "71"
    },
    {
      "correctAns": "1",
      "explaination": "Encapsulation is implemented by combining methods and attribute into a class. The class acts like a container of encapsulating properties.",
      "mark": "2",
      "options1": "Encapsulation",
      "options2": "Inheritance",
      "options3": "Polymorphism",
      "options4": "Abstraction",
      "qsn": "Which concept of Java is achieved by combining methods and attribute into a class?",
      "qsnNumber": "72"
    },
    {
      "correctAns": "4",
      "explaination": "It is a relationship where all objects have their own lifecycle and there is no owner. This occurs where many to many relationship is available, instead of one to one or one to many.",
      "mark": "2",
      "options1": "Aggregation",
      "options2": "Composition",
      "options3": "Encapsulation",
      "options4": "Association",
      "qsn": "What is it called if an object has its own lifecycle and there is no owner?",
      "qsnNumber": "73"
    },
    {
      "correctAns": "2",
      "explaination": "Composition occurs when child object gets killed if parent object gets killed. Aggregation is also known as strong Aggregation.",
      "mark": "2",
      "options1": "Aggregation",
      "options2": "Composition",
      "options3": "Encapsulation",
      "options4": "Association",
      "qsn": "What is it called where child object gets killed if parent object is killed?",
      "qsnNumber": "74"
    },
    {
      "correctAns": "1",
      "explaination": "Aggregation occurs when objects have their own life cycle and child object can associate with only one parent object.",
      "mark": "2",
      "options1": "Aggregation",
      "options2": "Composition",
      "options3": "Encapsulation",
      "options4": "Association",
      "qsn": "What is it called where object has its own lifecycle and child object cannot belong to another parent object?",
      "qsnNumber": "75"
    },
    {
      "correctAns": "2",
      "explaination": "JDK is core component of Java Environment and provides all the tools, executables and binaries required to compile, debug and execute a Java Program.",
      "mark": "2",
      "options1": "JVM",
      "options2": "JDK",
      "options3": "JIT",
      "options4": "JRE",
      "qsn": "Which component is used to compile, debug and execute java program?",
      "qsnNumber": "76"
    },
    {
      "correctAns": "1",
      "explaination": "JVM is responsible to converting bytecode to the machine specific code. JVM is also platform dependent and provides core java functions like garbage collection,memory management, security etc.",
      "mark": "2",
      "options1": "JVM",
      "options2": "JDK",
      "options3": "JIT",
      "options4": "JRE",
      "qsn": "Which component is responsible for converting bytecode into machine specific code?",
      "qsnNumber": "77"
    },
    {
      "correctAns": "4",
      "explaination": "JRE is the implementation of JVM, it provides platform to execute java programs.",
      "mark": "2",
      "options1": "JVM",
      "options2": "JDK",
      "options3": "JIT",
      "options4": "JRE",
      "qsn": "Which component is responsible to run java program?",
      "qsnNumber": "78"
    },
    {
      "correctAns": "3",
      "explaination": "JIT optimizes bytecode to machine specific language code by compiling similar bytecodes at same time.This reduces overall time taken for compilation of bytecode to machine specific language.",
      "mark": "2",
      "options1": "JVM",
      "options2": "JDK",
      "options3": "JIT",
      "options4": "JRE",
      "qsn": "Which component is responsible to optimize bytecode to machine code?",
      "qsnNumber": "79"
    },
    {
      "correctAns": "1",
      "explaination": "Java is called ‘Platform Independent Language’ as it primarily works on the principle of ‘compile once, run everywhere’.",
      "mark": "2",
      "options1": "Platform independent programming language",
      "options2": "Platform dependent programming language",
      "options3": "Code dependent programming language",
      "options4": "Sequence dependent programming language",
      "qsn": "Which statement is true about java?",
      "qsnNumber": "80"
    },
    {
      "correctAns": "3",
      "explaination": "main method cannot be private as it is invoked by external method. Other identifier are valid with main method.",
      "mark": "2",
      "options1": "public",
      "options2": "static",
      "options3": "private",
      "options4": "final",
      "qsn": "Which of the below is invalid identifier with main method?",
      "qsnNumber": "81"
    },
    {
      "correctAns": "2",
      "explaination": "Java files have .java extension",
      "mark": "2",
      "options1": ".class",
      "options2": ".java",
      "options3": ".txt",
      "options4": ".js",
      "qsn": "What is the extension of java code files?",
      "qsnNumber": "82"
    },
    {
      "correctAns": "1",
      "explaination": "The compiled java files have .class extension.",
      "mark": "2",
      "options1": ".class",
      "options2": ".java",
      "options3": ".txt",
      "options4": ".js",
      "qsn": "What is the extension of compiled java classes?",
      "qsnNumber": "83"
    },
    {
      "correctAns": "1",
      "explaination": "The Java source file contains a header that declares the type of class or interface, its visibility with respect to other classes, its name and any superclass it may extend, or interface it implements.",
      "mark": "2",
      "options1": "Java source file header",
      "options2": "Extension of compilation unit",
      "options3": "We cannot differentiate between class and interface",
      "options4": "The class or interface name should be postfixed with unit type",
      "qsn": "How can we identify whether a compilation unit is class or interface from a .class file?",
      "qsnNumber": "84"
    },
    {
      "correctAns": "2",
      "explaination": "Interpreters read high level language (interprets it) and execute the program. Interpreters are normally not passing through byte-code and jit compilation.",
      "mark": "2",
      "options1": "They convert bytecode to machine language code",
      "options2": "They read high level code and execute them",
      "options3": "They are intermediated between JIT and JVM",
      "options4": "It is a synonym for JIT",
      "qsn": "What is use of interpreter?",
      "qsnNumber": "85"
    },
    {
      "correctAns": "2",
      "explaination": "Memory is allocated to an object using new operator. box obj; just declares a reference to object, no memory is allocated to it hence it points to NULL.",
      "mark": "2",
      "options1": "Memory address of allocated memory of object",
      "options2": "NULL",
      "options3": "Any arbitrary pointer",
      "options4": "Garbage",
      "qsn": " What is the stored in the object obj in "box obj;"?",
      "qsnNumber": "86"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "class",
      "options2": "struct",
      "options3": "int",
      "options4": "none of the mentioned",
      "qsn": "Which of these keywords is used to make a class?",
      "qsnNumber": "87"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "Box obj = new Box();",
      "options2": "Box obj = new Box;",
      "options3": "obj = new Box();",
      "options4": "new Box obj;",
      "qsn": "Which of the following is a valid declaration of an object of class Box?",
      "qsnNumber": "88"
    },
    {
      "correctAns": "3",
      "explaination": "Operator new dynamically allocates memory for an object and returns a reference to it. This reference is address in memory of the object allocated by new.",
      "mark": "2",
      "options1": "malloc",
      "options2": "alloc",
      "options3": "new",
      "options4": "give",
      "qsn": "Which of these operators is used to allocate memory for an object?",
      "qsnNumber": "89"
    },
    {
      "correctAns": "1",
      "explaination": "Every class does not need to have a main() method, there can be only one main() method which is made public.",
      "mark": "2",
      "options1": "Every class must contain a main() method",
      "options2": "Applets do not require a main() method at all",
      "options3": "There can be only one main() method in a program",
      "options4": "main() method must be made public",
      "qsn": "Which of these statement is incorrect?",
      "qsnNumber": "90"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "Public method is accessible to all other classes in the hierarchy",
      "options2": "Public method is accessible only to subclasses of its parent class",
      "options3": "Public method can only be called by object of its class",
      "options4": "Public method can be accessed by calling object of the public class",
      "qsn": "Which of the following statements is correct?",
      "qsnNumber": "91"
    },
    {
      "correctAns": "3",
      "explaination": "Return type of an method must be made void if it is not returning any value.",
      "mark": "2",
      "options1": "int",
      "options2": "float",
      "options3": "void",
      "options4": "double",
      "qsn": "What is the return type of a method that does not returns any value?",
      "qsnNumber": "92"
    },
    {
      "correctAns": "2",
      "explaination": "Function overloading is a process of defining more than one method in a class with same name differentiated by function signature i:e return type or parameters type and number. Example – int volume(int length, int width) & int volume(int length , int width , int height) can be used to calculate volume.",
      "mark": "2",
      "options1": "Function overriding",
      "options2": "Function overloading",
      "options3": "Function doubling",
      "options4": "None of the mentioned",
      "qsn": "What is the process of defining more than one method in a class differentiated by method signature?",
      "qsnNumber": "93"
    },
    {
      "correctAns": "4",
      "explaination": "A constructor is a method that initializes an object immediately upon creation. It has the same name as that of class in which it resides.",
      "mark": "2",
      "options1": "finalize",
      "options2": "delete",
      "options3": "class",
      "options4": "constructor",
      "qsn": "Which of the following is a method having same name as that of it’s class?",
      "qsnNumber": "94"
    },
    {
      "correctAns": "1",
      "explaination": "main() method can be defined only once in a program. Program execution begins from the main() method by java runtime system.",
      "mark": "2",
      "options1": "main method",
      "options2": "finalize method",
      "options3": "static method",
      "options4": "private method",
      "qsn": "Which method can be defined only once in a program?",
      "qsnNumber": "95"
    },
    {
      "correctAns": "4",
      "explaination": "All object of class share a single copy of methods defined in a class, Methods are allotted memory only once. All the objects of the class have access to methods of that class are allotted memory only for the variables not for the methods.",
      "mark": "2",
      "options1": "All object of a class are allotted memory for the all the variables defined in the class",
      "options2": "If a function is defined public it can be accessed by object of other class by inheritation",
      "options3": "main() method must be made public",
      "options4": "All object of a class are allotted memory for the methods defined in the class",
      "qsn": "Which of these statement is incorrect?",
      "qsnNumber": "96"
    },
    {
      "correctAns": "4",
      "explaination": "Constructors does not have any return type, not even void.",
      "mark": "2",
      "options1": "int",
      "options2": "float",
      "options3": "void",
      "options4": "none of the mentioned",
      "qsn": "What is the return type of Constructors?",
      "qsnNumber": "97"
    },
    {
      "correctAns": "4",
      "explaination": "this keyword can be used inside any method to refer to the current object. this is always a reference to the object on which the method was invoked.",
      "mark": "2",
      "options1": "import",
      "options2": "catch",
      "options3": "abstract",
      "options4": "this",
      "qsn": "Which keyword is used by method to refer to the object that invoked it?",
      "qsnNumber": "98"
    },
    {
      "correctAns": "4",
      "explaination": "A constructor is a method that initializes an object immediately upon creation. It has the same name as that of class in which it resides.",
      "mark": "2",
      "options1": "finalize",
      "options2": "delete",
      "options3": "class",
      "options4": "constructor",
      "qsn": "Which of the following is a method having same name as that of its class?",
      "qsnNumber": "99"
    },
    {
      "correctAns": "4",
      "explaination": "Java handles deallocation of memory automatically, we do not need to explicitly delete an element. Garbage collection only occurs during execution of the program. When no references to the object exist, that object is assumed to be no longer needed, and the memory occupied by the object can be reclaimed.",
      "mark": "2",
      "options1": "delete",
      "options2": "free",
      "options3": "new",
      "options4": "none of the mentioned",
      "qsn": "Which operator is used by Java run time implementations to free the memory of an object when it is no longer needed?",
      "qsnNumber": "100"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "finalize()",
      "options2": "delete()",
      "options3": "main()",
      "options4": "none of the mentioned",
      "qsn": "Which function is used to perform some action when the object is to be destroyed?",
      "qsnNumber": "101"
    },
    {
      "correctAns": "3",
      "explaination": "finalize() method is called just prior to garbage collection. it is not called when object goes out of scope.",
      "mark": "2",
      "options1": "default constructor is called at the time of object declaration",
      "options2": "Constructor can be parameterized",
      "options3": "finalize() method is called when a object goes out of scope and is no longer needed",
      "options4": "finalize() method must be declared protected",
      "qsn": "Which of the following statements are incorrect?",
      "qsnNumber": "102"
    },
    {
      "correctAns": "1",
      "explaination": "Object of private constructor can only be created within class. Private constructor is used in singleton pattern.",
      "mark": "2",
      "options1": "Private constructor ensures only one instance of a class exist at any point of time",
      "options2": "Private constructor ensures multiple instances of a class exist at any point of time",
      "options3": "Private constructor eases the instantiation of a class",
      "options4": "Private constructor allows creating objects in other classes",
      "qsn": "What is true about private constructor?",
      "qsnNumber": "103"
    },
    {
      "correctAns": "3",
      "explaination": "this() and super() cannot be used in a method. This throws compile time error.",
      "mark": "2",
      "options1": "Runtime error",
      "options2": "Throws exception",
      "options3": "compile time error",
      "options4": "Runs successfully",
      "qsn": "What would be the behaviour if this() and super() used in a method?",
      "qsnNumber": "104"
    },
    {
      "correctAns": "3",
      "explaination": "Default, parameterised constructors can be defined.",
      "mark": "2",
      "options1": "Constructors cannot be synchronized in Java",
      "options2": "Java does not provide default copy constructor",
      "options3": "Constructor can be overloaded",
      "options4": "“this” and “super” can be used in a constructor",
      "qsn": "What is false about constructor?",
      "qsnNumber": "105"
    },
    {
      "correctAns": "4",
      "explaination": "Class class provides list of methods for use like getInstance().",
      "mark": "2",
      "options1": "Class.getInstance calls the constructor",
      "options2": "Class.getInstance is same as new operator",
      "options3": "Class.getInstance needs to have matching constructor",
      "options4": "Class.getInstance creates object if class does not have any constructor",
      "qsn": "What is true about Class.getInstance()?",
      "qsnNumber": "106"
    },
    {
      "correctAns": "2",
      "explaination": "Constructor returns a new object with variables defined as in the class. Instance variables are newly created and only one copy of static variables are created.",
      "mark": "2",
      "options1": "It can contain return type",
      "options2": "It can take any number of parameters",
      "options3": "It can have any non access modifiers",
      "options4": "Constructor cannot throw exception",
      "qsn": "What is true about constructor?",
      "qsnNumber": "107"
    },
    {
      "correctAns": "2",
      "explaination": "Protected access modifier means that constructor can be accessed by child classes of the parent class and classes in the same package.",
      "mark": "2",
      "options1": "Protected constructor can be called directly",
      "options2": "Protected constructor can only be called using super()",
      "options3": "Protected constructor can be used outside package",
      "options4": "protected constructor can be instantiated even if child is in a different package",
      "qsn": "What is true about protected constructor?",
      "qsnNumber": "108"
    },
    {
      "correctAns": "4",
      "explaination": "“this” is an important keyword in java. It helps to distinguish between local variable and variables passed in the method as parameters.",
      "mark": "2",
      "options1": "Passing itself to another method",
      "options2": "Calling another constructor in constructor chaining",
      "options3": "Referring to the instance variable when local variable has the same name",
      "options4": "Passing itself to method of the same class",
      "qsn": "What is not the use of “this” keyword in Java?",
      "qsnNumber": "110"
    },
    {
      "correctAns": "4",
      "explaination": "The class compiles successfully. But the object creation of that class gives compilation error.",
      "mark": "2",
      "options1": "Compilation error",
      "options2": "Compilation succeeds",
      "options3": "Runtime error",
      "options4": "Compilation succeeds but at the time of creating object using default constructor, it throws compilation error",
      "qsn": "What would be the behaviour if one parameterized constructor is explicitly defined?",
      "qsnNumber": "111"
    },
    {
      "correctAns": "1",
      "explaination": "The constructor cannot have a return type. It should create and return new object. Hence it would give compilation error.",
      "mark": "2",
      "options1": "Compilation error",
      "options2": "Runtime error",
      "options3": "Compilation and runs successfully",
      "options4": "Only String return type is allowed",
      "qsn": "What would be behaviour if constructor has a return type?",
      "qsnNumber": "112"
    },
    {
      "correctAns": "3",
      "explaination": "JVM is the super set which contains heap, stack, objects, pointers, etc.",
      "mark": "2",
      "options1": "Heap",
      "options2": "Stack",
      "options3": "JVM",
      "options4": "Class",
      "qsn": "Which of the following has highest memory requirement?",
      "qsnNumber": "113"
    },
    {
      "correctAns": "1",
      "explaination": "A new object is always created in young space.Once young space is full, a special young collection is run where objects which have lived long enough are moved to old space and memory is freed up in young space for new objects.",
      "mark": "2",
      "options1": "Young space",
      "options2": "Old space",
      "options3": "Young or Old space depending on space availability",
      "options4": "JVM",
      "qsn": "Where is a new object allocated memory?",
      "qsnNumber": "114"
    },
    {
      "correctAns": "2",
      "explaination": "A mark and sweep garbage collection consists of two phases, the mark phase and the sweep phase.I mark phase all the objects reachable by java threads, native handles and other root sources are marked alive and others are garbage. In sweep phase, the heap is traversed to find gaps between live objects and the gaps are marked free list used for allocating memory to new objects.",
      "mark": "2",
      "options1": "Cleanup model",
      "options2": "Mark and sweep model",
      "options3": "Space management model",
      "options4": "Sweep model",
      "qsn": "Which of the following is a garbage collection technique?",
      "qsnNumber": "115"
    },
    {
      "correctAns": "1",
      "explaination": "JVM will be started with Xms amount of memory and will be able to use a maximum of Xmx amount of memory. java -Xmx2048m -Xms256m.",
      "mark": "2",
      "options1": "Initial; Maximum memory",
      "options2": "Maximum; Initial memory",
      "options3": "Maximum memory",
      "options4": "Initial memory",
      "qsn": "What is -Xms and -Xmx while starting jvm?",
      "qsnNumber": "116"
    },
    {
      "correctAns": "3",
      "explaination": "The Xms flag has no default value, and Xmx typically has a default value of 256MB. A common use for these flags is when you encounter a java.lang.OutOfMemoryError.",
      "mark": "2",
      "options1": "MemoryFullException",
      "options2": "MemoryOutOfBoundsException",
      "options3": "OutOfMemoryError",
      "options4": "MemoryError",
      "qsn": "Which exception is thrown when java is out of memory?",
      "qsnNumber": "117"
    },
    {
      "correctAns": "1",
      "explaination": "We can use jmap as jmap -J-d64 -heap pid .",
      "mark": "2",
      "options1": "jmap",
      "options2": "memorymap",
      "options3": "memorypath",
      "options4": "jvmmap",
      "qsn": "How to get prints of shared object memory maps or heap memory maps for a given process?",
      "qsnNumber": "118"
    },
    {
      "correctAns": "3",
      "explaination": "The thread is paused when garbage collection runs which slows the application performance.",
      "mark": "2",
      "options1": "The thread continues its operation",
      "options2": "Garbage collection cannot happen until the thread is running",
      "options3": "The thread is paused while garbage collection runs",
      "options4": "The thread and garbage collection do not interfere with each other",
      "qsn": "What happens to thread when garbage collection kicks off?",
      "qsnNumber": "119"
    },
    {
      "correctAns": "1",
      "explaination": "Memory leak is like holding a strong reference to an object although it would never be needed anymore. Objects that are reachable but not live are considered memory leaks. Various tools help us to identify memory leaks.",
      "mark": "2",
      "options1": "JVM",
      "options2": "JConsole",
      "options3": "JProfiler",
      "options4": "Eclipse Profiler",
      "qsn": "Which of the below is not a Java Profiler?",
      "qsnNumber": "120"
    },
    {
      "correctAns": "3",
      "explaination": "The thread is paused when garbage collection runs which slows the application performance.",
      "mark": "2",
      "options1": "Code changes",
      "options2": "JVM parameter tuning",
      "options3": "Process restart",
      "options4": "GC parameter tuning",
      "qsn": "Which of the below is not a memory leak solution?",
      "qsnNumber": "121"
    },
    {
      "correctAns": "1",
      "explaination": "Two or more methods can have same name as long as their parameters declaration is different, the methods are said to be overloaded and process is called method overloading. Method overloading is a way by which Java implements polymorphism.",
      "mark": "2",
      "options1": "method overloading",
      "options2": "method overriding",
      "options3": "method hiding",
      "options4": "none of the mentioned",
      "qsn": "What is process of defining two or more methods within same class that have same name but different parameters declaration?",
      "qsnNumber": "122"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "Methods",
      "options2": "Constructors",
      "options3": "All of the mentioned",
      "options4": "None of the mentioned",
      "qsn": "Which of these can be overloaded?",
      "qsnNumber": "123"
    },
    {
      "correctAns": "1",
      "explaination": "When we pass an argument by call-by-value a copy of argument is made into the formal parameter of the subroutine and changes made on parameters of subroutine have no effect on original argument, they remain the same.",
      "mark": "2",
      "options1": "Copy of argument is made into the formal parameter of the subroutine",
      "options2": "Reference to original argument is passed to formal parameter of the subroutine",
      "options3": "Copy of argument is made into the formal parameter of the subroutine and changes made on parameters of subroutine have effect on original argument",
      "options4": "Reference to original argument is passed to formal parameter of the subroutine and changes made on parameters of subroutine have effect on original argument",
      "qsn": "Which of these is correct about passing an argument by call-by-value process?",
      "qsnNumber": "124"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "Polymorphism",
      "options2": "Abstraction",
      "options3": "Encapsulation",
      "options4": "Recursion",
      "qsn": "What is the process of defining a method in terms of itself, that is a method that calls itself?",
      "qsnNumber": "125"
    },
    {
      "correctAns": "2",
      "explaination": "main() method must be specified public as it called by Java run time system, outside of the program. If no access specifier is used then by default member is public within its own package & cannot be accessed by Java run time system.",
      "mark": "2",
      "options1": "private",
      "options2": "public",
      "options3": "protected",
      "options4": "none of the mentioned",
      "qsn": "Which of these access specifiers must be used for main() method?",
      "qsnNumber": "126"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "public",
      "options2": "private",
      "options3": "static",
      "options4": "protected",
      "qsn": "Which of these is used to access member of class before object of that class is created?",
      "qsnNumber": "127"
    },
    {
      "correctAns": "1",
      "explaination": "When we pass an argument by call-by-value a copy of argument is made into the formal parameter of the subroutine and changes made on parameters of subroutine have no effect on original argument, they remain the same.",
      "mark": "2",
      "options1": "private",
      "options2": "public",
      "options3": "public, within its own package",
      "options4": "protected",
      "qsn": "Which of these is used as default for a member of a class if no access specifier is used for it?",
      "qsnNumber": "128"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "Polymorphism",
      "options2": "Abstraction",
      "options3": "Encapsulation",
      "options4": "Recursion",
      "qsn": "What is the process by which we can control what parts of a program can access the members of a class?",
      "qsnNumber": "129"
    },
    {
      "correctAns": "3",
      "explaination": "private members of a class can not be inherited by a subclass.",
      "mark": "2",
      "options1": "public members of class can be accessed by any code in the program",
      "options2": "private members of class can only be accessed by other members of the class",
      "options3": "private members of class can be inherited by a subclass, and become protected members in subclass",
      "options4": "protected members of a class can be inherited by a subclass, and become private members of the subclass",
      "qsn": "Which of the following statements are incorrect?",
      "qsnNumber": "130"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "public",
      "options2": "private",
      "options3": "protected",
      "options4": "none of the mentioned",
      "qsn": "Which of these access specifier must be used for class so that it can be inherited by another subclass?",
      "qsnNumber": "131"
    },
    {
      "correctAns": "4",
      "explaination": "Public, private, protected and default are the access modifiers.",
      "mark": "2",
      "options1": "Public",
      "options2": "Private",
      "options3": "Protected",
      "options4": "Void",
      "qsn": "Which one of the following is not an access modifier?",
      "qsnNumber": "132"
    },
    {
      "correctAns": "1",
      "explaination": "The variables should be private and should be accessed with get and set methods.",
      "mark": "2",
      "options1": "private",
      "options2": "public",
      "options3": "protected",
      "options4": "default",
      "qsn": "All the variables of class should be ideally declared as ?",
      "qsnNumber": "133"
    },
    {
      "correctAns": "1",
      "explaination": "Private variables are accessible only within the class.",
      "mark": "2",
      "options1": "private",
      "options2": "public",
      "options3": "protected",
      "options4": "default",
      "qsn": "Which of the following modifier means a particular variable cannot be accessed within the package?",
      "qsnNumber": "134"
    },
    {
      "correctAns": "3",
      "explaination": "The protected access modifier is accessible within package and outside the package but only through inheritance. The protected access modifier can be used with data member, method and constructor. It cannot be applied on the class.",
      "mark": "2",
      "options1": "accessible only within the class",
      "options2": "accessible only within package",
      "options3": "accessible within package and outside the package but through inheritance only",
      "options4": "accessible by all",
      "qsn": "How can a protected modifier be accessed?",
      "qsnNumber": "135"
    },
    {
      "correctAns": "2",
      "explaination": "If we make any class constructor private, we cannot create the instance of that class from outside the class.",
      "mark": "2",
      "options1": "Any class can instantiate objects of class A",
      "options2": "Objects of class A can be instantiated only within the class where it is declared",
      "options3": "Inherited class can instantiate objects of class A",
      "options4": "classes within the same package as class A can instantiate objects of class A",
      "qsn": "What happens if constructor of class A is made private?",
      "qsnNumber": "136"
    },
    {
      "correctAns": "3",
      "explaination": "Variables of an interface are public, static and final by default because the interfaces cannot be instantiated, final ensures the value assigned cannot be changed with the implementing class and public for it to be accessible by all the implementing classes.",
      "mark": "2",
      "options1": "default and final",
      "options2": "default and static",
      "options3": "public,static and final",
      "options4": "protect, static and final",
      "qsn": "All the variables of interface should be ?",
      "qsnNumber": "137"
    },
    {
      "correctAns": "4",
      "explaination": "Final class cannot be inherited. This helps when we do not want classes to provide extension to these classes.",
      "mark": "2",
      "options1": "Final class cause compilation failure",
      "options2": "Final class cannot be instantiated",
      "options3": "Final class cause runtime failure",
      "options4": "Final class cannot be inherited",
      "qsn": "What is true of final class?",
      "qsnNumber": "138"
    },
    {
      "correctAns": "1",
      "explaination": "Only one copy of static variables is created when a class is loaded. Each object instantiated has its own copy of instance variables.",
      "mark": "2",
      "options1": "1, 10",
      "options2": "10, 10",
      "options3": "10, 1",
      "options4": "1, 1",
      "qsn": "How many copies of static and class variables are created when 10 objects are created of a class?",
      "qsnNumber": "139"
    },
    {
      "correctAns": "4",
      "explaination": "Default is the access modifier when none is defined explicitly. It means the member (method or variable) can be accessed within the same package.",
      "mark": "2",
      "options1": "protected",
      "options2": "private",
      "options3": "public",
      "options4": "default",
      "qsn": "Which is the modifier when there is none mentioned explicitly?",
      "qsnNumber": "140"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "class",
      "options2": "object",
      "options3": "variable",
      "options4": "none of the mentioned",
      "qsn": "Arrays in Java are implemented as?",
      "qsnNumber": "141"
    },
    {
      "correctAns": "1",
      "explaination": "A variable can be declared final, doing so prevents its content from being modified. Final variables must be initialized when it is declared.",
      "mark": "2",
      "options1": "final",
      "options2": "last",
      "options3": "constant",
      "options4": "static",
      "qsn": "Which of these keywords is used to prevent content of a variable from being modified?",
      "qsnNumber": "142"
    },
    {
      "correctAns": "2",
      "explaination": "static statements are run as soon as class containing then is loaded, prior to any object declaration.",
      "mark": "2",
      "options1": "class",
      "options2": "object",
      "options3": "variable",
      "options4": "method",
      "qsn": "Which of these cannot be declared static?",
      "qsnNumber": "143"
    },
    {
      "correctAns": "4",
      "explaination": "All objects of class share same static variable, when object of a class are declared, all the objects share same copy of static members, no copy of static variables are made.",
      "mark": "2",
      "options1": "static methods can call other static methods only",
      "options2": "static methods must only access static data",
      "options3": "static methods can not refer to this or super in any way",
      "options4": "when object of class is declared, each object contains its own copy of static variables",
      "qsn": "Which of the following statements are incorrect?",
      "qsnNumber": "144"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "Variables declared as final occupy memory",
      "options2": "final variable must be initialized at the time of declaration",
      "options3": "Arrays in java are implemented as an object",
      "options4": "All arrays contain an attribute-length which contains the number of elements stored in the array",
      "qsn": "Which of the following statements are incorrect?",
      "qsnNumber": "145"
    },
    {
      "correctAns": "1",
      "explaination": "main() method must be declared static, main() method is called by Java runtime system before any object of any class exists.",
      "mark": "2",
      "options1": "main()",
      "options2": "delete()",
      "options3": "run()",
      "options4": "finalize()",
      "qsn": "Which of these methods must be made static?",
      "qsnNumber": "146"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "class",
      "options2": "object",
      "options3": "variable",
      "options4": "character array",
      "qsn": "String in Java is a?",
      "qsnNumber": "147"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "char()",
      "options2": "Charat()",
      "options3": "charat()",
      "options4": "charAt()",
      "qsn": "Which of these method of String class is used to obtain character at specified index?",
      "qsnNumber": "148"
    },
    {
      "correctAns": "2",
      "explaination": "Whenever a subclass needs to refer to its immediate superclass, it can do so by use of the keyword super.",
      "mark": "2",
      "options1": "upper",
      "options2": "super",
      "options3": "this",
      "options4": "none of the mentioned",
      "qsn": "Which of these keywords is used to refer to member of base class from a subclass?",
      "qsnNumber": "149"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "isequal()",
      "options2": "isequals()",
      "options3": "equal()",
      "options4": "equals()",
      "qsn": "Which of these method of String class can be used to test to strings for equality?",
      "qsnNumber": "151"
    },
    {
      "correctAns": "2",
      "explaination": "Strings in Java are immutable that is they can not be modified.",
      "mark": "2",
      "options1": "String is a class",
      "options2": "Strings in java are mutable",
      "options3": "Every string is an object of class String",
      "options4": "Java defines a peer class of String, called StringBuffer, which allows string to be altered",
      "qsn": "Which of the following statements are incorrect?",
      "qsnNumber": "152"
    },
    {
      "correctAns": "3",
      "explaination": "If a static method is present in the program then it will be executed first, then main will be executed.",
      "mark": "2",
      "options1": "main method",
      "options2": "finalize method",
      "options3": "static method",
      "options4": "private method",
      "qsn": "Which of these is the method which is executed first before execution of any other thing takes place in a program?",
      "qsnNumber": "153"
    },
    {
      "correctAns": "2",
      "explaination": "Function overloading is a process of defining more than one method in a class with same name differentiated by function signature i:e return type or parameters type and number. Example – int volume(int length, int width) & int volume(int length , int width , int height) can be used to calculate volume.",
      "mark": "2",
      "options1": "Function overriding",
      "options2": "Function overloading",
      "options3": "Function doubling",
      "options4": "None of the mentioned",
      "qsn": "What is the process of defining more than one method in a class differentiated by parameters?",
      "qsnNumber": "154"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "Parameters data type",
      "options2": "Number of parameters",
      "options3": "Return type of method",
      "options4": "All of the mentioned",
      "qsn": "Which of these can be used to differentiate two or more methods having same name?",
      "qsnNumber": "155"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "void",
      "options2": "int",
      "options3": "float",
      "options4": "both int and float",
      "qsn": "Which of these data type can be used for a method having a return statement in it?",
      "qsnNumber": "156"
    },
    {
      "correctAns": "4",
      "explaination": "Even if a method is returning a value, it is not necessary to store that value.",
      "mark": "2",
      "options1": "Two or more methods with same name can be differentiated on the basis of their parameters data type",
      "options2": "Two or more method having same name can be differentiated on basis of number of parameters",
      "options3": "Any already defined method in java library can be defined again in the program with different data type of parameters",
      "options4": "If a method is returning a value the calling statement must have a variable to store that value",
      "qsn": "Which of these statement is incorrect?",
      "qsnNumber": "157"
    },
    {
      "correctAns": "1",
      "explaination": "Only main() method can be given parameters via using command line arguments.",
      "mark": "2",
      "options1": "main()",
      "options2": "recursive() method",
      "options3": "Any method",
      "options4": "System defined methods",
      "qsn": "Which of these method is given parameter via command line arguments?",
      "qsnNumber": "158"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "Array",
      "options2": "Stack",
      "options3": "String",
      "options4": "Integer",
      "qsn": "Which of these data types is used to store command line arguments?",
      "qsnNumber": "159"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "Infinite",
      "options2": "Only 1",
      "options3": "System Dependent",
      "options4": "None of the mentioned",
      "qsn": "How many arguments can be passed to main()?",
      "qsnNumber": "160"
    },
    {
      "correctAns": "3",
      "explaination": "args in an array of String.",
      "mark": "2",
      "options1": "args is a String",
      "options2": "args is a Character",
      "options3": "args is an array of String",
      "options4": "args in an array of Character",
      "qsn": "Which of these is a correct statement about args in "public static void main(String args[])"?",
      "qsnNumber": "161"
    },
    {
      "correctAns": "2",
      "explaination": "All command Line arguments are passed as a string. We must convert numerical value to their internal forms manually.",
      "mark": "2",
      "options1": "Yes",
      "options2": "No",
      "options3": "Compiler Dependent",
      "options4": "Only ASCII characters can be converted",
      "qsn": "Can command line arguments be converted into int automatically if required?",
      "qsnNumber": "162"
    },
    {
      "correctAns": "1",
      "explaination": "Arguments tab is used to pass command line argument in eclipse.",
      "mark": "2",
      "options1": "Arguments tab",
      "options2": "Variable tab",
      "options3": "Cannot pass command line argument in eclipse",
      "options4": "Environment variable tab",
      "qsn": "How do we pass command line argument in Eclipse?",
      "qsnNumber": "163"
    },
    {
      "correctAns": "2",
      "explaination": "JCommander is a very small Java framework that makes it trivial to parse command line parameters.",
      "mark": "2",
      "options1": "Args",
      "options2": "JCommander",
      "options3": "Command Line",
      "options4": "Input",
      "qsn": "Which class allows parsing of command line arguments?",
      "qsnNumber": "164"
    },
    {
      "correctAns": "4",
      "explaination": "@Parameter, @Parameter(names = { “-log”, “-verbose” }, description = “Level of verbosity”), etc are various forms of using @Parameter",
      "mark": "2",
      "options1": "@Input",
      "options2": "@Variable",
      "options3": "@Command Line",
      "options4": "@Parameter",
      "qsn": "Which annotation is used to represent command line input and assigned to correct data type?",
      "qsnNumber": "165"
    },
    {
      "correctAns": "2",
      "explaination": "JCommander supports the @syntax, which allows us to put all our options into a file",
      "mark": "2",
      "options1": "Allows multiple parameters to be passed",
      "options2": "Allows one to put all your options into a file and pass this file as parameter",
      "options3": "Allows one to pass only one parameter",
      "options4": "Allows one to pass one file containing only one parameter",
      "qsn": "What is the use of @syntax?",
      "qsnNumber": "166"
    },
    {
      "correctAns": "2",
      "explaination": "Recursion is the process of defining something in terms of itself. It allows us to define method that calls itself.",
      "mark": "2",
      "options1": "Recursion is a class",
      "options2": "Recursion is a process of defining a method that calls other methods repeatedly",
      "options3": "Recursion is a process of defining a method that calls itself repeatedly",
      "options4": "Recursion is a process of defining a method that calls other methods which in turn call again this method",
      "qsn": "What is Recursion in Java?",
      "qsnNumber": "167"
    },
    {
      "correctAns": "2",
      "explaination": "Recursions are always managed by using stack.",
      "mark": "2",
      "options1": "Array",
      "options2": "Stack",
      "options3": "Queue",
      "options4": "Tree",
      "qsn": "Which of these data types is used by operating system to manage the Recursion in Java?",
      "qsnNumber": "168"
    },
    {
      "correctAns": "1",
      "explaination": "If a recursive method does not have a base case then an infinite loop occurs which results in Stack Overflow.",
      "mark": "2",
      "options1": "An infinite loop occurs",
      "options2": "System stops the program after some time",
      "options3": "After 1000000 calls it will be automatically stopped",
      "options4": "None of the mentioned",
      "qsn": "Which of these will happen if recursive method does not have a base case?",
      "qsnNumber": "169"
    },
    {
      "correctAns": "4",
      "explaination": "Recursion is always managed by operating system.",
      "mark": "2",
      "options1": "A recursive method must have a base case",
      "options2": "Recursion always uses stack",
      "options3": "Recursive methods are faster that programmers written loop to call the function repeatedly using a stack",
      "options4": "Recursion is managed by Java Runtime environment",
      "qsn": "Which of these is not a correct statement?",
      "qsnNumber": "170"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "java.lang",
      "options2": "java.util",
      "options3": "java.io",
      "options4": "java.system",
      "qsn": "Which of these packages contains the exception Stack Overflow in Java?",
      "qsnNumber": "171"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "super",
      "options2": "this",
      "options3": "extent",
      "options4": "extends",
      "qsn": "Which of these keyword can be used in subclass to call the constructor of superclass?",
      "qsnNumber": "172"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "Method overloading",
      "options2": "Method overriding",
      "options3": "Method hiding",
      "options4": "None of the mentioned",
      "qsn": "What is the process of defining a method in subclass having same name & type signature as a method in its superclass?",
      "qsnNumber": "173"
    },
    {
      "correctAns": "4",
      "explaination": "To disallow a method from being overridden, specify final as a modifier at the start of its declaration. Methods declared as final cannot be overridden.",
      "mark": "2",
      "options1": "static",
      "options2": "constant",
      "options3": "protected",
      "options4": "final",
      "qsn": "Which of these keywords can be used to prevent Method overriding?",
      "qsnNumber": "174"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "super(void);",
      "options2": "superclass.();",
      "options3": "super.A();",
      "options4": "super();",
      "qsn": "Which of these is correct way of calling a constructor having no parameters, of superclass A by subclass B?",
      "qsnNumber": "175"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "Abstraction",
      "options2": "Encapsulation",
      "options3": "Polymorphism",
      "options4": "None of the mentioned",
      "qsn": "Which of these is supported by method overriding in Java?",
      "qsnNumber": "176"
    },
    {
      "correctAns": "2",
      "explaination": "Object class is superclass of every class in Java.",
      "mark": "2",
      "options1": "String class",
      "options2": "Object class",
      "options3": "Abstract class",
      "options4": "ArrayList class",
      "qsn": "Which of these class is superclass of every class in Java?",
      "qsnNumber": "177"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "Objectcopy()",
      "options2": "copy()",
      "options3": "Object clone()",
      "options4": "clone()",
      "qsn": "Which of these method of Object class can clone an object?",
      "qsnNumber": "178"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "get()",
      "options2": "void getclass()",
      "options3": "Class getclass()",
      "options4": "None of the mentioned",
      "qsn": "Which of these method of Object class is used to obtain class of an object at run time?",
      "qsnNumber": "179"
    },
    {
      "correctAns": "4",
      "explaination": "Declaring a class final implicitly declared all of its methods final, and makes the class inheritable.",
      "mark": "2",
      "options1": "super",
      "options2": "constant",
      "options3": "class",
      "options4": "final",
      "qsn": "Which of these keywords can be used to prevent inheritance of a class?",
      "qsnNumber": "180"
    },
    {
      "correctAns": "1",
      "explaination": "A abstract class is incomplete by itself and relies upon its subclasses to provide complete implementation. If we declare a class final then no class can inherit that class, an abstract class needs its subclasses hence both final and abstract cannot be used for a same class.",
      "mark": "2",
      "options1": "abstract",
      "options2": "extends",
      "options3": "abstract and extends",
      "options4": "none of the mentioned",
      "qsn": "Which of these keywords cannot be used for a class which has been declared final?",
      "qsnNumber": "181"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "Object class",
      "options2": "abstract class",
      "options3": "ArrayList class",
      "options4": "None of the mentioned",
      "qsn": "Which of these class relies upon its subclasses for complete implementation of its methods?",
      "qsnNumber": "182"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "abst",
      "options2": "abstract",
      "options3": "Abstract",
      "options4": "abstract class",
      "qsn": "Which of these keywords are used to define an abstract class?",
      "qsnNumber": "183"
    },
    {
      "correctAns": "1",
      "explaination": "Thread is not an abstract class.",
      "mark": "2",
      "options1": "Thread",
      "options2": "AbstractList",
      "options3": "List",
      "options4": "None of the Mentioned",
      "qsn": "Which of these is not abstract?",
      "qsnNumber": "184"
    },
    {
      "correctAns": "1",
      "explaination": "Any subclass of an abstract class must either implement all of the abstract method in the superclass or be itself declared abstract.",
      "mark": "2",
      "options1": "Abstract",
      "options2": "A simple class",
      "options3": "Static class",
      "options4": "None of the mentioned",
      "qsn": "If a class inheriting an abstract class does not define all of its function then it will be known as?",
      "qsnNumber": "185"
    },
    {
      "correctAns": "3",
      "explaination": "Abstract class cannot be directly initiated with new operator, Since abstract class does not contain any definition of implementation it is not possible to create an abstract object.",
      "mark": "2",
      "options1": "Every class containing abstract method must be declared abstract",
      "options2": "Abstract class defines only the structure of the class not its implementation",
      "options3": "Abstract class can be initiated by new operator",
      "options4": "Abstract class can be inherited",
      "qsn": "Which of these is not a correct statement?",
      "qsnNumber": "186"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "java.lang",
      "options2": "java.util",
      "options3": "java.io",
      "options4": "java.system",
      "qsn": "Which of these packages contains abstract keyword?",
      "qsnNumber": "187"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "super",
      "options2": "this",
      "options3": "extent",
      "options4": "extends",
      "qsn": "Which of these keyword must be used to inherit a class?",
      "qsnNumber": "188"
    },
    {
      "correctAns": "2",
      "explaination": "Whenever a subclass needs to refer to its immediate superclass, it can do so by use of the keyword super.",
      "mark": "2",
      "options1": "upper",
      "options2": "super",
      "options3": "this",
      "options4": "none of the mentioned",
      "qsn": "Which of these keywords is used to refer to member of base class from a subclass?",
      "qsnNumber": "189"
    },
    {
      "correctAns": "2",
      "explaination": "A class member declared protected becomes private member of subclass.",
      "mark": "2",
      "options1": "public member",
      "options2": "private member",
      "options3": "protected member",
      "options4": "static member",
      "qsn": "A class member declared protected becomes member of subclass of which type?",
      "qsnNumber": "190"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "class B + class A {}",
      "options2": "class B inherits class A {}",
      "options3": "class B extends A {}",
      "options4": "class B extends class A {}",
      "qsn": "Which of these is correct way of inheriting class A by class B?",
      "qsnNumber": "191"
    },
    {
      "correctAns": "2",
      "explaination": "Inheritance is way of acquiring attributes and methods of parent class. Java supports hierarchical inheritance directly.",
      "mark": "2",
      "options1": "Single inheritance",
      "options2": "Single inheritance",
      "options3": "Hierarchical inheritance",
      "options4": "Multiple inheritance",
      "qsn": "What is not type of inheritance?",
      "qsnNumber": "193"
    },
    {
      "correctAns": "1",
      "explaination": "Multiple inheritance in java is implemented using interfaces. Multiple interfaces can be implemented by a class.",
      "mark": "2",
      "options1": "Interfaces",
      "options2": "Multithreading",
      "options3": "Protected methods",
      "options4": "Private methods",
      "qsn": "Using which of the following, multiple inheritance in Java can be implemented?",
      "qsnNumber": "194"
    },
    {
      "correctAns": "4",
      "explaination": "All classes in java are inherited from Object class. Interfaces are not inherited from Object Class.",
      "mark": "2",
      "options1": "java.lang.class",
      "options2": "java.class.inherited",
      "options3": "java.class.object",
      "options4": "java.lang.Object",
      "qsn": "All classes in Java are inherited from which class?",
      "qsnNumber": "195"
    },
    {
      "correctAns": "2",
      "explaination": "By declaring variable private, the variable will not be available in inherited to subclass.",
      "mark": "2",
      "options1": "Protected",
      "options2": "Private",
      "options3": "Public",
      "options4": "Static",
      "qsn": "In order to restrict a variable of a class from inheriting to subclass, how variable should be declared?",
      "qsnNumber": "196"
    },
    {
      "correctAns": "1",
      "explaination": "Super keyword is used to access hidden super class variable in subclass.",
      "mark": "2",
      "options1": "super",
      "options2": "this",
      "options3": "upper",
      "options4": "classname",
      "qsn": "If super class and subclass have same variable name, which keyword should be used to use super class?",
      "qsnNumber": "197"
    },
    {
      "correctAns": "4",
      "explaination": "Interface is implemented using implements keyword. A concrete class must implement all the methods of an interface, else it must be declared abstract.",
      "mark": "2",
      "options1": "inherited",
      "options2": "using",
      "options3": "extends",
      "options4": "implements",
      "qsn": "Which of the following is used for implementing inheritance through interface?",
      "qsnNumber": "198"
    },
    {
      "correctAns": "4",
      "explaination": "Interface is implemented using implements keyword. A concrete class must implement all the methods of an interface, else it must be declared abstract.",
      "mark": "2",
      "options1": "inherited",
      "options2": "using",
      "options3": "extends",
      "options4": "implements",
      "qsn": "Which of the following is used for implementing inheritance through class?",
      "qsnNumber": "199"
    },
    {
      "correctAns": "3",
      "explaination": "Class can be extended using extends keyword. One class can extend only one class. A final class cannot be extended.",
      "mark": "2",
      "options1": "inherited",
      "options2": "using",
      "options3": "extends",
      "options4": "implements",
      "qsn": "Which of the following is used for implementing inheritance through class?",
      "qsnNumber": "200"
    },
    {
      "correctAns": "2",
      "explaination": "In case of such conflict, compiler will not be able to link a method call due to ambiguity. It will throw compile time error.",
      "mark": "2",
      "options1": "Runtime error",
      "options2": "Compile time error",
      "options3": "Code runs successfully",
      "options4": "First called method is executed successfully",
      "qsn": "What would be the result if class extends two interfaces and both have method with same name and signature?",
      "qsnNumber": "201"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "java.util",
      "options2": "java.lang",
      "options3": "ArrayList",
      "options4": "None of the mentioned",
      "qsn": "Which of these class is superclass of String and StringBuffer class?",
      "qsnNumber": "202"
    },
    {
      "correctAns": "1",
      "explaination": "Operator + is used to concatenate strings, Example String s = “i ” + “like ” + “java”; String s contains “I like java”.",
      "mark": "2",
      "options1": "+",
      "options2": "+=",
      "options3": "&",
      "options4": "||",
      "qsn": "Which of these operators can be used to concatenate two or more String objects?",
      "qsnNumber": "203"
    },
    {
      "correctAns": "4",
      "explaination": "Method length() of string class is used to get the length of the object which invoked method length().",
      "mark": "2",
      "options1": "get()",
      "options2": "Sizeof()",
      "options3": "lengthof()",
      "options4": "length()",
      "qsn": "Which of these method of class String is used to obtain length of String object?",
      "qsnNumber": "204"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "CHARAT()",
      "options2": "chatat()",
      "options3": "charAt()",
      "options4": "ChatAt()",
      "qsn": "Which of these method of class String is used to extract a single character from a String object?",
      "qsnNumber": "205"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "String()",
      "options2": "String(void)",
      "options3": "String(0)",
      "options4": "None of the mentioned",
      "qsn": "Which of these constructors is used to create an empty String object?",
      "qsnNumber": "206"
    },
    {
      "correctAns": "3",
      "explaination": "StringBuffer class is used to create strings that can be modified after they are created.",
      "mark": "2",
      "options1": "String objects are immutable, they cannot be changed",
      "options2": "String object can point to some other reference of String variable",
      "options3": "StringBuffer class is used to store string in a buffer for later use",
      "options4": "None of the mentioned",
      "qsn": "Which of these is an incorrect statement?",
      "qsnNumber": "207"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "getchars()",
      "options2": "GetChars()",
      "options3": "Getchars()",
      "options4": "getChars()",
      "qsn": "Which of these method of class String is used to extract more than one character at a time a String object?",
      "qsnNumber": "208"
    },
    {
      "correctAns": "1",
      "explaination": "getBytes() stores the character in an array of bytes. It uses default character to byte conversions provided by platform.",
      "mark": "2",
      "options1": "getBytes()",
      "options2": "GetByte()",
      "options3": "giveByte()",
      "options4": "Give Bytes()",
      "qsn": "Which of these methods is an alternative to getChars() that stores the characters in an array of bytes?",
      "qsnNumber": "209"
    },
    {
      "correctAns": "3",
      "explaination": "charAt() return one character only not array of character.",
      "mark": "2",
      "options1": "charAt()",
      "options2": "both getChars() & charAt()",
      "options3": "both toCharArray() & getChars()",
      "options4": "all of the mentioned",
      "qsn": "Which of these methods can be used to convert all characters in a String into a character array?",
      "qsnNumber": "210"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "equals()",
      "options2": "Equals()",
      "options3": "isequal()",
      "options4": "Isequal()",
      "qsn": "Which of these method of class String is used to compare two String objects for their equality?",
      "qsnNumber": "211"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "regionMatch()",
      "options2": "match()",
      "options3": "RegionMatches()",
      "options4": "regionMatches()",
      "qsn": "Which of these methods is used to compare a specific region inside a string with another specific region in another string?",
      "qsnNumber": "213"
    },
    {
      "correctAns": "1",
      "explaination": "Method startsWith() of string class is used to check whether the String in question starts with a specified string. It is specialized form of method regionMatches().",
      "mark": "2",
      "options1": "startsWith()",
      "options2": "endsWith()",
      "options3": "Starts()",
      "options4": "ends()",
      "qsn": "Which of these method of class String is used to check whether a given object starts with a particular string literal?",
      "qsnNumber": "214"
    },
    {
      "correctAns": "1",
      "explaination": "compareTo() function returns zero when both the strings are equal, it returns a value less than zero if the invoking string is less than the other string being compared and value greater than zero when invoking string is greater than the string compared to.",
      "mark": "2",
      "options1": "zero",
      "options2": "value less than zero",
      "options3": "value greater than zero",
      "options4": "none of the mentioned",
      "qsn": "What is the value returned by function compareTo() if the invoking string is less than the string compared?",
      "qsnNumber": "215"
    },
    {
      "correctAns": "3",
      "explaination": "equals() method of string class returns boolean value true if both the string are equal and false if they are unequal.",
      "mark": "2",
      "options1": "char",
      "options2": "int",
      "options3": "boolean",
      "options4": "all of the mentioned",
      "qsn": "Which of these data type value is returned by equals() method of String class?",
      "qsnNumber": "216"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "substring()",
      "options2": "Substring()",
      "options3": "SubString()",
      "options4": "None of the mentioned",
      "qsn": "Which of these method of class String is used to extract a substring from a String object?",
      "qsnNumber": "217"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "startsWith()",
      "options2": "trim()",
      "options3": "Trim()",
      "options4": "doTrim()",
      "qsn": "Which of these method of class String is used to remove leading and trailing whitespaces?",
      "qsnNumber": "218"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "zero",
      "options2": "value less than zero",
      "options3": "value greater than zero",
      "options4": "none of the mentioned",
      "qsn": "What is the value returned by function compareTo() if the invoking string is greater than the string compared?",
      "qsnNumber": "219"
    },
    {
      "correctAns": "1",
      "explaination": "replace() method replaces all occurrences of one character in invoking string with another character.",
      "mark": "2",
      "options1": "replace() method replaces all occurrences of one character in invoking string with another character",
      "options2": "replace() method replaces only first occurrences of a character in invoking string with another character",
      "options3": "replace() method replaces all the characters in invoking string with another character",
      "options4": "replace() replace() method replaces last occurrence of a character in invoking string with another character",
      "qsn": "Which of the following statement is correct?",
      "qsnNumber": "220"
    },
    {
      "correctAns": "2",
      "explaination": "StringBuffer represents growable and writable character sequence.",
      "mark": "2",
      "options1": "String()",
      "options2": "StringBuffer()",
      "options3": "Both of the mentioned",
      "options4": "None of the mentioned",
      "qsn": "Which of these class is used to create an object whose character sequence is mutable?",
      "qsnNumber": "221"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "concat()",
      "options2": "append()",
      "options3": "join()",
      "options4": "concatenate()",
      "qsn": "Which of these method of class StringBuffer is used to concatenate the string representation to the end of invoking string?",
      "qsnNumber": "222"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "length()",
      "options2": "Length()",
      "options3": "capacity()",
      "options4": "Capacity()",
      "qsn": "Which of these method of class StringBuffer is used to find the length of current character sequence?",
      "qsnNumber": "223"
    },
    {
      "correctAns": "1",
      "explaination": "reverse() method reverses all characters. It returns the reversed object on which it was called.",
      "mark": "2",
      "options1": "reverse() method reverses all characters",
      "options2": "reverseall() method reverses all characters",
      "options3": "replace() method replaces first occurrence of a character in invoking string with another character",
      "options4": "replace() method replaces last occurrence of a character in invoking string with another character",
      "qsn": "Which of the following statement is correct?",
      "qsnNumber": "224"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "substring()",
      "options2": "Substring()",
      "options3": "SubString()",
      "options4": "None of the mentioned",
      "qsn": "Which of these method of class StringBuffer is used to extract a substring from a String object?",
      "qsnNumber": "225"
    },
    {
      "correctAns": "1",
      "explaination": "reverse() method reverses all characters. It returns the reversed object on which it was called.",
      "mark": "2",
      "options1": "reverse()",
      "options2": "reverseall()",
      "options3": "Reverse()",
      "options4": "reverseAll()",
      "qsn": "Which of these method of class StringBuffer is used to reverse sequence of characters?",
      "qsnNumber": "226"
    },
    {
      "correctAns": "1",
      "explaination": "length()- returns the length of String the StringBuffer would create whereas capacity() returns total number of characters that can be supported before it is grown.",
      "mark": "2",
      "options1": "length()",
      "options2": "capacity()",
      "options3": "Length()",
      "options4": "Capacity()",
      "qsn": "Which of these method of class StringBuffer is used to get the length of sequence of characters?",
      "qsnNumber": "227"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "StringBuffer()",
      "options2": "StringBuffer(int size)",
      "options3": "StringBuffer(String str)",
      "options4": "StringBuffer(int size , String str)",
      "qsn": "Which of the following are incorrect form of StringBuffer class constructor?",
      "qsnNumber": "228"
    },
    {
      "correctAns": "3",
      "explaination": "Array class is a member of java.util.",
      "mark": "2",
      "options1": "Byte",
      "options2": "Integer",
      "options3": "Array",
      "options4": "Class",
      "qsn": "Which of these classes is not included in java.lang?",
      "qsnNumber": "229"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "type wrapping",
      "options2": "type conversion",
      "options3": "type casting",
      "options4": "none of the Mentioned.",
      "qsn": "Which of these is a process of converting a simple data type into a class?",
      "qsnNumber": "230"
    },
    {
      "correctAns": "4",
      "explaination": "Number is an abstract class containing subclasses Double, Float, Byte, Short, Integer and Long.",
      "mark": "2",
      "options1": "Long",
      "options2": "Digits",
      "options3": "Float",
      "options4": "Number",
      "qsn": "Which of these is a super class of wrappers Double & Integer?",
      "qsnNumber": "231"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "float",
      "options2": "double",
      "options3": "Float",
      "options4": "Double",
      "qsn": "Which of these is wrapper for simple data type float?",
      "qsnNumber": "232"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "bytevalue()",
      "options2": "byte byteValue()",
      "options3": "Bytevalue()",
      "options4": "Byte Bytevalue().",
      "qsn": "Which of the following is method of wrapper Float for converting the value of an object into byte?",
      "qsnNumber": "233"
    },
    {
      "correctAns": "1",
      "explaination": "isinfinite() method returns true is the value being tested is infinitely large or small in magnitude.",
      "mark": "2",
      "options1": "isInfinite()",
      "options2": "isNaN()",
      "options3": "Isinfinite()",
      "options4": "IsNaN()",
      "qsn": "Which of these methods is used to check for infinitely large and small values?",
      "qsnNumber": "234"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "lang",
      "options2": "java",
      "options3": "util",
      "options4": "java.packages",
      "qsn": "Which of the following package stores all the simple data types in java?",
      "qsnNumber": "235"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "Integer",
      "options2": "Long",
      "options3": "Byte",
      "options4": "Double",
      "qsn": "Which of these is a wrapper for data type int?",
      "qsnNumber": "236"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "int hash()",
      "options2": "int hashcode()",
      "options3": "int hashCode()",
      "options4": "Integer hashcode()",
      "qsn": "Which of the following methods is a method of wrapper Integer for obtaining hash code for the invoking object?",
      "qsnNumber": "237"
    },
    {
      "correctAns": "4",
      "explaination": "Number is an abstract class containing subclasses Double, Float, Byte, Short, Integer and Long.",
      "mark": "2",
      "options1": "Long",
      "options2": "Digits",
      "options3": "Float",
      "options4": "Number",
      "qsn": "Which of these is a super class of wrappers Long, Character & Integer?",
      "qsnNumber": "238"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "Float",
      "options2": "Character",
      "options3": "String",
      "options4": "Integer",
      "qsn": "Which of these is wrapper for simple data type char?",
      "qsnNumber": "239"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "bytevalue()",
      "options2": "int intValue();",
      "options3": "Bytevalue()",
      "options4": "Byte Bytevalue()",
      "qsn": "Which of the following is method of wrapper Integer for converting the value of an object into int?",
      "qsnNumber": "240"
    },
    {
      "correctAns": "2",
      "explaination": "long longValue() is used to obtain value of invoking object as a long.",
      "mark": "2",
      "options1": "long value()",
      "options2": "long longValue()",
      "options3": "Long longvalue()",
      "options4": "Long Longvalue()",
      "qsn": "Which of these methods is used to obtain value of invoking object as a long?",
      "qsnNumber": "241"
    },
    {
      "correctAns": "1",
      "explaination": "The Void class has one field, TYPE, which holds a reference to the Class object for the type void.",
      "mark": "2",
      "options1": "Void",
      "options2": "Process",
      "options3": "System",
      "options4": "Runtime",
      "qsn": "Which of these class have only one field ‘TYPE’?",
      "qsnNumber": "242"
    },
    {
      "correctAns": "2",
      "explaination": "Kills the subprocess. The subprocess represented by this Process object is forcibly terminated.",
      "mark": "2",
      "options1": "void kill()",
      "options2": "void destroy()",
      "options3": "void terminate()",
      "options4": "void exit()",
      "qsn": "Which of the following method of Process class can terminate a process?",
      "qsnNumber": "243"
    },
    {
      "correctAns": "4",
      "explaination": "Standard output variable ‘out’ is defined in System class. out is usually used in print statement i:e System.out.print().",
      "mark": "2",
      "options1": "Void",
      "options2": "Process",
      "options3": "Runtime",
      "options4": "System",
      "qsn": "Standard output variable ‘out’ is defined in which class?",
      "qsnNumber": "244"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "Void",
      "options2": "Process",
      "options3": "Runtime",
      "options4": "System",
      "qsn": "Which of these class can encapsulate an entire executing program?",
      "qsnNumber": "245"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "currenttime()",
      "options2": "currentTime()",
      "options3": "currentTimeMillis()",
      "options4": "currenttimeMillis()",
      "qsn": "Which of the following is method of System class is used to find how long a program takes to execute?",
      "qsnNumber": "246"
    },
    {
      "correctAns": "4",
      "explaination": "System class holds a collection of static methods and variables. The standard input, output and error output of java runtime are stored in the in, out and err variables of System class.",
      "mark": "2",
      "options1": "Void",
      "options2": "Process",
      "options3": "Runtime",
      "options4": "System",
      "qsn": "Which of these class holds a collection of static methods and variables?",
      "qsnNumber": "247"
    },
    {
      "correctAns": "4",
      "explaination": "The object class class is superclass of all other classes.",
      "mark": "2",
      "options1": "Math",
      "options2": "Process",
      "options3": "System",
      "options4": "Object",
      "qsn": "Which of these class is superclass of all other classes?",
      "qsnNumber": "248"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "clone()",
      "options2": "copy()",
      "options3": "duplicate()",
      "options4": "dito()",
      "qsn": "Which of these method of Object class can generate duplicate copy of the object on which it is called?",
      "qsnNumber": "249"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "approximately 3",
      "options2": "approximately 3.14",
      "options3": "approximately 2.72",
      "options4": "approximately 0",
      "qsn": "What is the value of double consonant ‘E’ defined in Math class?",
      "qsnNumber": "250"
    },
    {
      "correctAns": "4",
      "explaination": "max(), min() and abs() are all rounding functions.",
      "mark": "2",
      "options1": "max()",
      "options2": "min()",
      "options3": "abs()",
      "options4": "all of the mentioned",
      "qsn": "Which of these method is a rounding function of Math class?",
      "qsnNumber": "251"
    },
    {
      "correctAns": "1",
      "explaination": "Math class contains all the floating point functions that are used for geometry, trigonometry, as well as several general purpose methods. Example : sin(), cos(), exp(), sqrt() etc.",
      "mark": "2",
      "options1": "Math",
      "options2": "Process",
      "options3": "System",
      "options4": "Object",
      "qsn": "Which of these class contains only floating point functions?",
      "qsnNumber": "252"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "Class",
      "options2": "Object",
      "options3": "Runtime",
      "options4": "System",
      "qsn": "Which of these class encapsulate the run time state of an object or an interface?",
      "qsnNumber": "253"
    },
    {
      "correctAns": "3",
      "explaination": "System class methods throw SecurityException.",
      "mark": "2",
      "options1": "IOException",
      "options2": "SystemException",
      "options3": "SecurityException",
      "options4": "InputOutputException",
      "qsn": "Which of these exceptions is thrown by methods of System class?",
      "qsnNumber": "254"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "gc()",
      "options2": "garbage()",
      "options3": "garbagecollection()",
      "options4": "Systemgarbagecollection()",
      "qsn": "Which of these methods initiates garbage collection?",
      "qsnNumber": "255"
    },
    {
      "correctAns": "1",
      "explaination": "load() methods loads the dynamic library whose name is specified.",
      "mark": "2",
      "options1": "load()",
      "options2": "library()",
      "options3": "loadlib()",
      "options4": "loadlibrary()",
      "qsn": "Which of these methods loads the specified dynamic library?",
      "qsnNumber": "256"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "setStream()",
      "options2": "setosteam()",
      "options3": "setOut()",
      "options4": "streamtoOstream()",
      "qsn": "Which of these method can set the out stream to OutputStream?",
      "qsnNumber": "257"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "0",
      "options2": "1",
      "options3": "2",
      "options4": "3",
      "qsn": "Which of these values are returns under the case of normal termination of a program?",
      "qsnNumber": "258"
    },
    {
      "correctAns": "4",
      "explaination": "Number is an abstract class containing subclasses Double, Float, Byte, Short, Integer and Long.",
      "mark": "2",
      "options1": "Long",
      "options2": "Digits",
      "options3": "Float",
      "options4": "Number",
      "qsn": "Which of these is a super class of wrappers Double and Float?",
      "qsnNumber": "259"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "doubleValue()",
      "options2": "converDouble()",
      "options3": "getDouble()",
      "options4": "getDoubleValue()",
      "qsn": "Which of the following methods return the value as a double?",
      "qsnNumber": "260"
    },
    {
      "correctAns": "1",
      "explaination": "isNaN() methods returns true if num specified is not a number, otherwise it returns false.",
      "mark": "2",
      "options1": "isNaN()",
      "options2": "isNumber()",
      "options3": "checkNaN()",
      "options4": "checkNumber()",
      "qsn": "Which of these methods can be used to check whether the given value is a number or not?",
      "qsnNumber": "261"
    },
    {
      "correctAns": "2",
      "explaination": "isInfinite() methods returns true if specified value is an infinite value otherwise it returns false.",
      "mark": "2",
      "options1": "Infinite()",
      "options2": "isInfinite()",
      "options3": "checkInfinite()",
      "options4": "None of the mentioned",
      "qsn": "Which of these method of Double wrapper can be used to check whether a given value is infinite or not?",
      "qsnNumber": "262"
    },
    {
      "correctAns": "4",
      "explaination": "compareTo() methods compare the specified object to be double, if it is not then ClassCastException is thrown.",
      "mark": "2",
      "options1": "IOException",
      "options2": "SystemException",
      "options3": "CastException",
      "options4": "ClassCastException",
      "qsn": "Which of these exceptions is thrown by compareTo() method defined in double wrapper?",
      "qsnNumber": "263"
    },
    {
      "correctAns": "3",
      "explaination": "java.io provides support for input and output operations.",
      "mark": "2",
      "options1": "java.util",
      "options2": "java.lang",
      "options3": "java.io",
      "options4": "all of the mentioned",
      "qsn": "Which of these packages contain classes and interfaces used for input & output operations of a program?",
      "qsnNumber": "264"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "String",
      "options2": "StringReader",
      "options3": "Writer",
      "options4": "File",
      "qsn": "Which of these class is not a member class of java.io package?",
      "qsnNumber": "266"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "DataInput",
      "options2": "ObjectInput",
      "options3": "ObjectFilter",
      "options4": "FileFilter",
      "qsn": "Which of these interface is not a member of java.io package?",
      "qsnNumber": "267"
    },
    {
      "correctAns": "1",
      "explaination": "A File describes properties of a file, a File object is used to obtain or manipulate the information associated with a disk file, such as the permissions, time date, and directories path, and to navigate subdirectories.",
      "mark": "2",
      "options1": "File",
      "options2": "Writer",
      "options3": "InputStream",
      "options4": "Reader",
      "qsn": "Which of these class is not related to input and output stream in terms of functioning?",
      "qsnNumber": "268"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "a file in disk",
      "options2": "directory path",
      "options3": "directory in disk",
      "options4": "none of the mentioned",
      "qsn": "Which of these is specified by a File object?",
      "qsnNumber": "269"
    },
    {
      "correctAns": "2",
      "explaination": "isFile() returns true if called on a file and returns false when called on a directory.",
      "mark": "2",
      "options1": "IsFile()",
      "options2": "isFile()",
      "options3": "Isfile()",
      "options4": "isfile()",
      "qsn": "Which of these is method for testing whether the specified element is a file or a directory?",
      "qsnNumber": "271"
    },
    {
      "correctAns": "1",
      "explaination": "InputStream & OutputStream are designed for byte stream. Reader and writer are designed for character stream.",
      "mark": "2",
      "options1": "InputStream",
      "options2": "Reader",
      "options3": "Writer",
      "options4": "All of the mentioned",
      "qsn": "Which of these classes is used for input and output operation when working with bytes?",
      "qsnNumber": "272"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "FileReader",
      "options2": "FileWriter",
      "options3": "FileInputStream",
      "options4": "InputStreamReader",
      "qsn": " Which of these class is used to read and write bytes in a file?",
      "qsnNumber": "273"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "read()",
      "options2": "scanf()",
      "options3": "get()",
      "options4": "getInteger()",
      "qsn": "Which of these method of InputStream is used to read integer representation of next available byte input?",
      "qsnNumber": "274"
    },
    {
      "correctAns": "4",
      "explaination": "Every method of OutputStream returns void and throws an IOExeption in case of errors.",
      "mark": "2",
      "options1": "int",
      "options2": "float",
      "options3": "byte",
      "options4": "none of the mentioned",
      "qsn": "Which of these data type is returned by every method of OutputStream?",
      "qsnNumber": "275"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "clear()",
      "options2": "flush()",
      "options3": "fflush()",
      "options4": "close()",
      "qsn": "Which of these is a method to clear all the data present in output buffers?",
      "qsnNumber": "276"
    },
    {
      "correctAns": "2",
      "explaination": "write() and print() are the two methods of OutputStream that are used for printing the byte data.",
      "mark": "2",
      "options1": "put()",
      "options2": "print() and write()",
      "options3": "printf()",
      "options4": "write() and read()",
      "qsn": "Which of these method(s) is/are used for writing bytes to an outputstream?",
      "qsnNumber": "277"
    },
    {
      "correctAns": "3",
      "explaination": "InputStream & OutputStream classes under byte stream they are not streams. Character Stream contains all the classes which can work with Unicode.",
      "mark": "2",
      "options1": "InputStream",
      "options2": "OutputStream",
      "options3": "Character Stream",
      "options4": "All of the mentioned",
      "qsn": "Which of these stream contains the classes which can work on character stream?",
      "qsnNumber": "278"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "FileReader",
      "options2": "FileWriter",
      "options3": "FileInputStream",
      "options4": "InputStreamReader",
      "qsn": "Which of these class is used to read characters in a file?",
      "qsnNumber": "283"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "read()",
      "options2": "scanf()",
      "options3": "get()",
      "options4": "getInteger()",
      "qsn": "Which of these method of FileReader class is used to read characters from a file?",
      "qsnNumber": "290"
    },
    {
      "correctAns": "3",
      "explaination": "CharArrayReader is an implementation of an input stream that uses character array as a source. Here array is the input source.",
      "mark": "2",
      "options1": "BufferedReader",
      "options2": "FileReader",
      "options3": "CharArrayReader",
      "options4": "FileArrayReader",
      "qsn": "Which of these class can be used to implement input stream that uses a character array as the source?",
      "qsnNumber": "291"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "clear()",
      "options2": "flush()",
      "options3": "fflush()",
      "options4": "close()",
      "qsn": "Which of these is a method to clear all the data present in output buffers?",
      "qsnNumber": "292"
    },
    {
      "correctAns": "3",
      "explaination": "PushbackReader class allows one or more characters to be returned to the input stream. This allows looking ahead in input stream and performing action accordingly.",
      "mark": "2",
      "options1": "BufferedReader",
      "options2": "Bufferedwriter",
      "options3": "PushbachReader",
      "options4": "CharArrayReader",
      "qsn": "Which of these classes can return more than one character to be returned to input stream?",
      "qsnNumber": "293"
    },
    {
      "correctAns": "4",
      "explaination": "There are only 3 type of memory segment. Stack Segment, Heap Segment and Code Segment.",
      "mark": "2",
      "options1": "Stack Segment",
      "options2": "Heap Segment",
      "options3": "Code Segment",
      "options4": "Register Segment",
      "qsn": "Which of the following is not a segment of memory in java?",
      "qsnNumber": "295"
    },
    {
      "correctAns": "2",
      "explaination": "JVM is Interpreter. It reads .class files which is the byte code generated by compiler line by line and converts it into native OS code.",
      "mark": "2",
      "options1": "Bootstrap",
      "options2": "Interpreter",
      "options3": "Extension",
      "options4": "Compiler",
      "qsn": "What is JVM?",
      "qsnNumber": "296"
    },
    {
      "correctAns": "1",
      "explaination": "Bootstrap is a class loader. It loads the classes into memory.",
      "mark": "2",
      "options1": "Bootstrap",
      "options2": "Compiler",
      "options3": "Heap",
      "options4": "Interpreter",
      "qsn": "Which one of the following is a class loader?",
      "qsnNumber": "299"
    },
    {
      "correctAns": "2",
      "explaination": "Extension loads jar files from lib/ext directory of the JRE.This gives the basic functionality available.",
      "mark": "2",
      "options1": "Bootstrap",
      "options2": "Extension",
      "options3": "System",
      "options4": "Heap",
      "qsn": "Which class loader loads jar files from JDK directory?",
      "qsnNumber": "300"
    },
    {
      "correctAns": "1",
      "explaination": "Young generation is further classified into Eden space and Survivor space. Old generation is also the tenured space. Permanent generation is the non heap space.",
      "mark": "2",
      "options1": "Young",
      "options2": "Old",
      "options3": "Permanent",
      "options4": "Temporary",
      "qsn": "Which of the following is not a memory classification in java?",
      "qsnNumber": "301"
    },
    {
      "correctAns": "3",
      "explaination": "Metaspace is the replacement of PermGen in java 8. It is very similar to PermGen except that it resizes itself dynamically. Thus, it is unbounded.",
      "mark": "2",
      "options1": "Code Cache",
      "options2": "Tenured Space",
      "options3": "Metaspace",
      "options4": "Eden space",
      "qsn": "What is the java 8 update of PermGen?",
      "qsnNumber": "302"
    },
    {
      "correctAns": "4",
      "explaination": "The permanent generation holds objects which JVM finds convenient to have the garbage collector. Objects describing classes and methods, as well as the classes and methods themselves are a part of Permanent generation.",
      "mark": "2",
      "options1": "Eden space",
      "options2": "Survivor space",
      "options3": "Tenured space",
      "options4": "Permanent space",
      "qsn": "Classes and Methods are stored in which space?",
      "qsnNumber": "303"
    },
    {
      "correctAns": "2",
      "explaination": "When a string is created ; if the string already exists in the pool, the reference of the existing string will be returned, else a new object is created and its reference is returned.",
      "mark": "2",
      "options1": "Java Stack",
      "options2": "Java Heap",
      "options3": "Permanent Generation",
      "options4": "Metaspace",
      "qsn": "Where is String Pool stored?",
      "qsnNumber": "304"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "IllegalException",
      "options2": "Argument Exception",
      "options3": "IllegalArgumentException",
      "options4": "IllegalMethodArgumentExcepetion",
      "qsn": "Which of these exceptions handles the situations when illegal argument is used to invoke a method?",
      "qsnNumber": "305"
    },
    {
      "correctAns": "4",
      "explaination": "Array size must always be positive, if we declare an array with negative size then built in exception “NegativeArraySizeException” is thrown by the java’s run time system.",
      "mark": "2",
      "options1": "IllegalArrayException",
      "options2": "IllegalArraySizeExeption",
      "options3": "NegativeArrayException",
      "options4": "NegativeArraySizeExeption",
      "qsn": "Which of these exceptions will be thrown if we declare an array with negative size?",
      "qsnNumber": "306"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "java.io",
      "options2": "java.util",
      "options3": "java.lang",
      "options4": "java.net",
      "qsn": "Which of these packages contain all the Java’s built in exceptions??",
      "qsnNumber": "307"
    },
    {
      "correctAns": "2",
      "explaination": "If we use null reference anywhere in the code where the value stored in that reference is used then NullPointerException occurs.",
      "mark": "2",
      "options1": "ArithmeticException",
      "options2": "NullPointerException",
      "options3": "IllegalAccessException",
      "options4": "IllegalOperationException",
      "qsn": "Which of these exceptions will be thrown if we use null reference for an arithmetic operation?",
      "qsnNumber": "308"
    },
    {
      "correctAns": "2",
      "explaination": "Exception class contains all the methods necessary for defining an exception. The class contains the Throwable class.",
      "mark": "2",
      "options1": "java.lang",
      "options2": "Exception",
      "options3": "RunTime",
      "options4": "System",
      "qsn": "Which of these class is used to create user defined exception?",
      "qsnNumber": "309"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "Math",
      "options2": "Process",
      "options3": "System",
      "options4": "Object",
      "qsn": "Which of these class provides various types of rounding functions?",
      "qsnNumber": "310"
    },
    {
      "correctAns": "1",
      "explaination": "ceil(double X) returns the smallest whole number greater than or equal to variable X.",
      "mark": "2",
      "options1": "double ceil(double X)",
      "options2": "double floor(double X)",
      "options3": "double max(double X)",
      "options4": "double min(double X)",
      "qsn": "Which of these method return a smallest whole number greater than or equal to variable X?",
      "qsnNumber": "311"
    },
    {
      "correctAns": "2",
      "explaination": "double floor(double X) returns a largest whole number less than or equal to variable X..",
      "mark": "2",
      "options1": "double ceil(double X)",
      "options2": "double floor(double X)",
      "options3": "double max(double X)",
      "options4": "double min(double X)",
      "qsn": "Which of these method return a largest whole number less than or equal to variable X?",
      "qsnNumber": "312"
    },
    {
      "correctAns": "4",
      "explaination": "rint() rounds up a variable to nearest integer.",
      "mark": "2",
      "options1": "max()",
      "options2": "min()",
      "options3": "abs()",
      "options4": "rint()",
      "qsn": "Which of these method is a rounding function of Math class?",
      "qsnNumber": "313"
    },
    {
      "correctAns": "1",
      "explaination": "Math class contains all the floating point functions that are used for geometry, trigonometry, as well as several general purpose methods. Example : sin(), cos(), exp(), sqrt() etc.",
      "mark": "2",
      "options1": "Math",
      "options2": "Process",
      "options3": "System",
      "options4": "Object",
      "qsn": "Which of these class contains only floating point functions?",
      "qsnNumber": "314"
    },
    {
      "correctAns": "1",
      "explaination": "abs() returns the absolute value of a variable.",
      "mark": "2",
      "options1": "abs()",
      "options2": "absolute()",
      "options3": "absolutevariable()",
      "options4": "none of the mentioned",
      "qsn": "Which of function return absolute value of a variable?",
      "qsnNumber": "315"
    },
    {
      "correctAns": "3",
      "explaination": "decode() methods returns a Byte object that contains the value specified by string.",
      "mark": "2",
      "options1": "toString()",
      "options2": "getString()",
      "options3": "decode()",
      "options4": "encode()",
      "qsn": "Which of these methods of Byte wrapper can be used to obtain Byte object from a string?",
      "qsnNumber": "316"
    },
    {
      "correctAns": "1",
      "explaination": "doubleValue() returns the value of invoking object as double.",
      "mark": "2",
      "options1": "doubleValue()",
      "options2": "converDouble()",
      "options3": "getDouble()",
      "options4": "getDoubleValue()",
      "qsn": "Which of the following methods Byte wrapper return the value as a double?",
      "qsnNumber": "317"
    },
    {
      "correctAns": "4",
      "explaination": "Number is an abstract class containing subclasses Double, Float, Byte, Short, Integer and Long.",
      "mark": "2",
      "options1": "Long",
      "options2": "Digits",
      "options3": "Float",
      "options4": "Number",
      "qsn": "Which of these is a super class of wrappers Byte and short wrappers?",
      "qsnNumber": "318"
    },
    {
      "correctAns": "2",
      "explaination": "isInfinite() methods is defined in Integer and Long Wrappers, returns true if specified value is an infinite value otherwise it returns false.",
      "mark": "2",
      "options1": "intValue()",
      "options2": "isInfinite()",
      "options3": "toString()",
      "options4": "hashCode()",
      "qsn": "Which of these methods is not defined in both Byte and Short wrappers?",
      "qsnNumber": "319"
    },
    {
      "correctAns": "4",
      "explaination": "compareTo() methods compare the specified object to be double, if it is not then ClassCastException is thrown.",
      "mark": "2",
      "options1": "IOException",
      "options2": "SystemException",
      "options3": "CastException",
      "options4": "ClassCastException",
      "qsn": "Which of these exceptions is thrown by compareTo() method defined in double wrapper?",
      "qsnNumber": "320"
    },
    {
      "correctAns": "3",
      "explaination": "To obtain the char value contained in a Character object, we use charValue() method.",
      "mark": "2",
      "options1": "get()",
      "options2": "getVhar()",
      "options3": "charValue()",
      "options4": "getCharacter()",
      "qsn": "Which of these methods of Character wrapper can be used to obtain the char value contained in Character object.",
      "qsnNumber": "321"
    },
    {
      "correctAns": "4",
      "explaination": "Character wrapper defines 5 constants – MAX_RADIX, MIN_RADIX, MAX_VALUE, MIN_VALUE & TYPE.",
      "mark": "2",
      "options1": "MAX_RADIX",
      "options2": "MAX_VALUE",
      "options3": "TYPE",
      "options4": "All of the mentioned",
      "qsn": "Which of the following constant are defined in Character wrapper?",
      "qsnNumber": "322"
    },
    {
      "correctAns": "4",
      "explaination": "Number is an abstract class containing subclasses Double, Float, Byte, Short, Character, Integer and Long.",
      "mark": "2",
      "options1": "Long",
      "options2": "Digits",
      "options3": "Float",
      "options4": "Number",
      "qsn": "Which of these is a super class of Character wrapper?",
      "qsnNumber": "323"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "isIdentifier()",
      "options2": "isJavaIdentifier()",
      "options3": "isJavaIdentifierPart()",
      "options4": "none of the mentioned",
      "qsn": "Which of these methods is used to know whether a given Character object is part of Java’s Identifiers?",
      "qsnNumber": "324"
    },
    {
      "correctAns": "4",
      "explaination": "isDefined() returns true if ch is defined by Unicode. Otherwise, it returns false.",
      "mark": "2",
      "options1": "Latin",
      "options2": "ASCII",
      "options3": "ANSI",
      "options4": "UNICODE",
      "qsn": "Which of these coding techniques is used by method isDefined()?",
      "qsnNumber": "325"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "getBool()",
      "options2": "booleanValue()",
      "options3": "getbooleanValue()",
      "options4": "getboolValue()",
      "qsn": "Which of these methods of Boolean wrapper returns boolean equivalent of an object.",
      "qsnNumber": "326"
    },
    {
      "correctAns": "4",
      "explaination": "Boolean wrapper defines 3 constants – TRUE, FALSE & TYPE.",
      "mark": "2",
      "options1": "TRUE",
      "options2": "FALSE",
      "options3": "TYPE",
      "options4": "All of the mentioned",
      "qsn": "Which of the following constant are defined in Boolean wrapper?",
      "qsnNumber": "327"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "getString()",
      "options2": "toString()",
      "options3": "converString()",
      "options4": "getStringObject()",
      "qsn": "Which of these methods return string equivalent of Boolean object?",
      "qsnNumber": "328"
    },
    {
      "correctAns": "1",
      "explaination": "valueOf() returns true if the specified string contains “true” in lower or uppercase and false otherwise.",
      "mark": "2",
      "options1": "valueOf()",
      "options2": "valueOfString()",
      "options3": "getString()",
      "options4": "none of the mentioned",
      "qsn": "Which of these methods is used to know whether a string contains “true”?",
      "qsnNumber": "329"
    },
    {
      "correctAns": "4",
      "explaination": "Void class has only one field – TYPE, which holds a reference to the Class object for type void. We do not create instance of this class.",
      "mark": "2",
      "options1": "Character",
      "options2": "Boolean",
      "options3": "Byte",
      "options4": "void",
      "qsn": "Which of these class have only one field?",
      "qsnNumber": "330"
    },
    {
      "correctAns": "2",
      "explaination": "SystemMath class defines complete set of mathematical methods that are parallel those in Math class. The difference is that the StrictMath version is guaranteed to generate precisely identical results across all Java implementations.",
      "mark": "2",
      "options1": "SystemMath",
      "options2": "StrictMath",
      "options3": "Compiler",
      "options4": "ClassLoader",
      "qsn": "Which of these class contains all the methods present in Math class?",
      "qsnNumber": "331"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "rand()",
      "options2": "random()",
      "options3": "randomNumber()",
      "options4": "randGenerator()",
      "qsn": "Which of these method return a pseudorandom number?",
      "qsnNumber": "332"
    },
    {
      "correctAns": "4",
      "explaination": "IEEEremainder() returns the remainder of dividend / divisor.",
      "mark": "2",
      "options1": "remainder()",
      "options2": "getRemainder()",
      "options3": "CSIremainder()",
      "options4": "IEEEremainder()",
      "qsn": "Which of these method returns the remainder of dividend / divisor?",
      "qsnNumber": "333"
    },
    {
      "correctAns": "2",
      "explaination": "None.",
      "mark": "2",
      "options1": "toRadian()",
      "options2": "toDegree()",
      "options3": "convertRadian()",
      "options4": "converDegree()",
      "qsn": "Which of these method converts radians to degrees?",
      "qsnNumber": "334"
    },
    {
      "correctAns": "3",
      "explaination": "toRadian() and toDegree() methods were added by Java 2.0 before that there was no method which could directly convert degree into radians and vice versa.",
      "mark": "2",
      "options1": "Java 1.0",
      "options2": "Java 1.5",
      "options3": "Java 2.0",
      "options4": "Java 3.0",
      "qsn": "toRadian() and toDegree() methods were added by which version of Java?",
      "qsnNumber": "335"
    },
    {
      "correctAns": "1",
      "explaination": "ciel(double X) returns the smallest whole number greater than or equal to variable X.",
      "mark": "2",
      "options1": "double ciel(double X)",
      "options2": "double floor(double X)",
      "options3": "double max(double X)",
      "options4": "double min(double X)",
      "qsn": "Which of these method return a smallest whole number greater than or equal to variable X?",
      "qsnNumber": "336"
    },
    {
      "correctAns": "3",
      "explaination": "None.",
      "mark": "2",
      "options1": "Class",
      "options2": "System",
      "options3": "Runtime",
      "options4": "ClassLoader",
      "qsn": "Which of these classes encapsulate runtime enviroment?",
      "qsnNumber": "337"
    },
    {
      "correctAns": "3",
      "explaination": "Every method of Runtime class throws SecurityException.",
      "mark": "2",
      "options1": "IOException",
      "options2": "SystemException",
      "options3": "SecurityException",
      "options4": "RuntimeException",
      "qsn": "Which of the following exceptions is thrown by every method of Runtime class?",
      "qsnNumber": "338"
    },
    {
      "correctAns": "2",
      "explaination": "TotalMemory() returns the total number of bytes available to the program.",
      "mark": "2",
      "options1": "getMemory()",
      "options2": "TotalMemory()",
      "options3": "SystemMemory()",
      "options4": "getProcessMemory()",
      "qsn": "Which of these methods returns the total number of bytes of memory available to the program?",
      "qsnNumber": "339"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "Class",
      "options2": "System",
      "options3": "Runtime",
      "options4": "ClassLoader",
      "qsn": "Which of these class defines how the classes are loaded?",
      "qsnNumber": "340"
    },
    {
      "correctAns": "4",
      "explaination": "findSystemClass() returns a class object given its name.",
      "mark": "2",
      "options1": "getClass()",
      "options2": "findClass()",
      "options3": "getSystemClass()",
      "options4": "findSystemClass()",
      "qsn": "WWhich of these methods return a class object given its name?",
      "qsnNumber": "341"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "IOException",
      "options2": "SystemException",
      "options3": "ClassFormatError",
      "options4": "ClassNotFoundException",
      "qsn": "Which of these Exceptions is thrown by loadClass() method of ClassLoader class?",
      "qsnNumber": "342"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "Class",
      "options2": "System",
      "options3": "Runtime",
      "options4": "Catche",
      "qsn": "Which of these classes encapsulate runtime state of an object?",
      "qsnNumber": "343"
    },
    {
      "correctAns": "4",
      "explaination": "Boolean wrapper defines 3 constants – TRUE, FLASE & TYPE.",
      "mark": "2",
      "options1": "TRUE",
      "options2": "FALSE",
      "options3": "TYPE",
      "options4": "All of the mentioned",
      "qsn": "Which of the following constant are defined in Boolean wrapper?",
      "qsnNumber": "344"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "getClass()",
      "options2": "Class()",
      "options3": "WhoseClass()",
      "options4": "WhoseObject()",
      "qsn": "Which of these methods returns the class of an object?",
      "qsnNumber": "345"
    },
    {
      "correctAns": "1",
      "explaination": "valueOf() returns true if the specified string contains “true” in lower or uppercase and false otherwise.",
      "mark": "2",
      "options1": "valueOf()",
      "options2": "valueOfString()",
      "options3": "getString()",
      "options4": "None of the mentioned",
      "qsn": "Which of these methods is used to know whether a string contains “true”?",
      "qsnNumber": "346"
    },
    {
      "correctAns": "4",
      "explaination": "Void class has only one field – TYPE, which holds a reference to the Class object for type void. We do not create instance of this class.",
      "mark": "2",
      "options1": "Character",
      "options2": "Boolean",
      "options3": "Byte",
      "options4": "void",
      "qsn": "Which of these class have only one field?",
      "qsnNumber": "347"
    },
    {
      "correctAns": "1",
      "explaination": "Runnable interface defines all the methods for handling thread operations in Java.",
      "mark": "2",
      "options1": "Runnable interface",
      "options2": "Math interface",
      "options3": "System interface",
      "options4": "ThreadHandling interface",
      "qsn": "Which of interface contains all the methods used for handling thread related operations in Java?",
      "qsnNumber": "348"
    },
    {
      "correctAns": "3",
      "explaination": "Thread class is used to make threads in java, Thread encapsulates a thread of execution. To create a new thread the program will either extend Thread or implement the Runnable interface.",
      "mark": "2",
      "options1": "String",
      "options2": "System",
      "options3": "Thread",
      "options4": "Runnable",
      "qsn": "Which of these class is used to make a thread?",
      "qsnNumber": "349"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "Runnable",
      "options2": "Connections",
      "options3": "Set",
      "options4": "MapConnections",
      "qsn": "Which of these interface is implemented by Thread class?",
      "qsnNumber": "350"
    },
    {
      "correctAns": "1",
      "explaination": "None.",
      "mark": "2",
      "options1": "sleep()",
      "options2": "terminate()",
      "options3": "suspend()",
      "options4": "stop()",
      "qsn": "Which of these method of Thread class is used to suspend a thread for a period of time?",
      "qsnNumber": "351"
    },
    {
      "correctAns": "3",
      "explaination": "toRadian() and toDegree() methods were added by Java 2.0 before that there was no method which could directly convert degree into radians and vice versa.",
      "mark": "2",
      "options1": "Java 1.0",
      "options2": "Java 1.5",
      "options3": "Java 2.0",
      "options4": "Java 3.0",
      "qsn": "toRadian() and toDegree() methods were added by which version of Java?",
      "qsnNumber": "352"
    },
    {
      "correctAns": "3",
      "explaination": "Java application uses ProcessBuilder object to create a new process. By default, same set of environment variables passed which are set in application’s virtual machine process.",
      "mark": "2",
      "options1": "Process",
      "options2": "Builder",
      "options3": "ProcessBuilder",
      "options4": "CreateBuilder",
      "qsn": "Which object Java application uses to create a new process?",
      "qsnNumber": "353"
    },
    {
      "correctAns": "2",
      "explaination": "Java system properties are only used and accessible by the processes they are added.",
      "mark": "2",
      "options1": "Java system properties are accessible by any process",
      "options2": "Java system properties are accessible by processes they are added to",
      "options3": "Java system properties are retrieved by System.getenv()",
      "options4": "Java system prooerties are set by System.setenv()",
      "qsn": "Which of the following is true about Java system properties?",
      "qsnNumber": "354"
    },
    {
      "correctAns": "3",
      "explaination": "java.home is the installation directory of Java Runtime Environment.",
      "mark": "2",
      "options1": "user.home",
      "options2": "java.class.path",
      "options3": "java.home",
      "options4": "user.dir",
      "qsn": "Which system property stores installation directory of JRE?",
      "qsnNumber": "355"
    },
    {
      "correctAns": "4",
      "explaination": "System.getProperty(“variable”) returns null value. Because, variable is not a property and if property does not exist, this method returns null value.",
      "mark": "2",
      "options1": "compilation error",
      "options2": "value stored in variable",
      "options3": "runtime error",
      "options4": "null",
      "qsn": "What does System.getProperty(“variable”) return?",
      "qsnNumber": "356"
    },
    {
      "correctAns": "3",
      "explaination": "The changes made by setProperties method are not persistent. Hence, it does not affect future invocation.",
      "mark": "2",
      "options1": "setProperties method changes the set of Java Properties which are persistent",
      "options2": "Changing the system properties within an application will affect future invocations",
      "options3": "setProperties method changes the set of Java Properties which are not persistent",
      "options4": "setProperties writes the values directly into the file which stores all the properties",
      "qsn": "What is true about setProperties method?",
      "qsnNumber": "357"
    },
    {
      "correctAns": "4",
      "explaination": "None.",
      "mark": "2",
      "options1": "@Environment",
      "options2": "@Variable",
      "options3": "@Property",
      "options4": "@Autowired",
      "qsn": "How to use environment properties in the class?",
      "qsnNumber": "358"
    },
    {
      "correctAns": "1",
      "explaination": "@Value are used to inject the properties and assign them to variables.",
      "mark": "2",
      "options1": "@Value(“${my.property}”)private String prop;",
      "options2": "@Property(“${my.property}”)private String prop;",
      "options3": "@Environment(“${my.property}”)private String prop;",
      "options4": "@Env(“${my.property}”)private String prop;",
      "qsn": "How to assign values to variable using property?",
      "qsnNumber": "359"
    },
    {
      "correctAns": "2",
      "explaination": "JAVA_HOME is used to store path to the java installation.",
      "mark": "2",
      "options1": "JAVA",
      "options2": "JAVA_HOME",
      "options3": "CLASSPATH",
      "options4": "MAVEN_HOME",
      "qsn": "Which environment variable is used to set java path?",
      "qsnNumber": "360"
    },
    {
      "correctAns": "3",
      "explaination": "This method can be used to load files using relative path to the package of the class.",
      "mark": "2",
      "options1": "InputStream in =this.getClass().getResource(“SomeTextFile.txt”);",
      "options2": "InputStream in =this.getClass().getResourceClasspath(“SomeTextFile.txt”);",
      "options3": "InputStream in =this.getClass().getResourceAsStream(“SomeTextFile.txt”);",
      "options4": "InputStream in =this.getClass().getResource(“classpath:/SomeTextFile.txt”);",
      "qsn": "How to read a classpath file?",
      "qsnNumber": "361"
    },
    {
      "correctAns": "2",
      "explaination": "The masseter is the most superficially located muscle used in mastication and is the strongest muscle used.",
      "mark": "2",
      "options1": "Medial pterygoid",
      "options2": "Masseter",
      "options3": "Temporalis",
      "options4": "Lateral pterygoid",
      "qsn": "Which muscle of mastication is superficially located and one of the strongest muscles?",
      "qsnNumber": "362"
    },
    {
      "correctAns": "1",
      "explaination": "Mandibular second molars have shallower mesial root concavities that are not as prominent as the other teeth listed.",
      "mark": "2",
      "options1": "Mandibular second molar",
      "options2": "Mandibular first molar",
      "options3": "Maxillary first molar",
      "options4": "Maxillary first premolar",
      "qsn": "Which tooth has a mesial root concavity that is not as prominent?",
      "qsnNumber": "363"
    },
    {
      "correctAns": "3",
      "explaination": "The maxillary first premolar is the only premolar to have two roots, and it&apos;s furcation is toward the apical 1/3 to 1/2 of the tooth.",
      "mark": "2",
      "options1": "Mandibular first premolar",
      "options2": "Mandibular second premolar",
      "options3": "Maxillary first premolar",
      "options4": "Maxillary second premolar",
      "qsn": "Which tooth has a furcation that is in the apical third to 1/2 of the tooth?",
      "qsnNumber": "364"
    },
    {
      "correctAns": "3",
      "explaination": "Class III occlusion is when the mesiobuccal groove of the mandibular first molar is mesial to the mesiobuccal cusp of the maxillary first permanent molar.",
      "mark": "2",
      "options1": "Class I",
      "options2": "Class II",
      "options3": "Class III",
      "options4": "Class IV",
      "qsn": "A patient&apos;s mandibular first permanent molar&apos;s mesiobuccal groove is in a mesial relationship to the mesiobuccal cusp of the maxillary first permanent molar. What classification of occlusion is this?",
      "qsnNumber": "365"
    },
    {
      "correctAns": "2",
      "explaination": "The maxillary first molar has three roots, with the lingual root being longer than the others, extending past the lingual surface of the tooth&apos;s crown.",
      "mark": "2",
      "options1": "Mandibular first molar",
      "options2": "Maxillary first molar",
      "options3": "Mandibular second molar",
      "options4": "Maxillary second molar",
      "qsn": "Which tooth has a long lingual root that usually extends beyond the lingual surface of the crown?",
      "qsnNumber": "366"
    },
    {
      "correctAns": "4",
      "explaination": "Maxillary lateral incisors are the only incisor teeth to sometimes have a palatoradicular groove that extends from the crown to the root on the lingual surface.",
      "mark": "2",
      "options1": "Maxillary central incisors",
      "options2": "Mandibular central incisors",
      "options3": "Mandibular lateral incisors",
      "options4": "Maxillary lateral incisors",
      "qsn": "Which tooth may have a lingual groove extending from the crown to the root?",
      "qsnNumber": "367"
    },
    {
      "correctAns": "3",
      "explaination": "20-30 grams of fiber each day is the recommended daily adult intake for healthy individuals.",
      "mark": "2",
      "options1": "0-10 grams",
      "options2": "10-20 grams",
      "options3": "20-30 grams",
      "options4": "20-50 grams",
      "qsn": "What is the recommended fiber intake each day for an adult?",
      "qsnNumber": "368"
    },
    {
      "correctAns": "2",
      "explaination": "70-120 mg/100mL blood is a healthy blood glucose level and is the level that a controlled diabetic or other healthy individual should measure within.",
      "mark": "2",
      "options1": "50-100",
      "options2": "70-120",
      "options3": "90-150",
      "options4": "100-175",
      "qsn": "A healthy blood glucose level range is __________ mg/100mL blood.",
      "qsnNumber": "369"
    },
    {
      "correctAns": "3",
      "explaination": "Starch is the complex carbohydrate that comes from plant storage in the form of glucose.",
      "mark": "2",
      "options1": "Cellulose",
      "options2": "Glycogen",
      "options3": "Starch",
      "options4": "Pectin",
      "qsn": "Which complex carbohydrate is made up of the plant form of glucose?",
      "qsnNumber": "370"
    },
    {
      "correctAns": "2",
      "explaination": "5.5 pH is the acidic level at which decalcification and demineralization of tooth enamel begins to occur.",
      "mark": "2",
      "options1": "3.3",
      "options2": "5.5",
      "options3": "6.6",
      "options4": "7.7",
      "qsn": "Decalcification and demineralization of tooth enamel begins at what pH?",
      "qsnNumber": "371"
    },
    {
      "correctAns": "3",
      "explaination": "Xylitol is the sweetener found naturally in plants and can interfere with s.mutans metabolism, decreasing the demineralization of enamel.",
      "mark": "2",
      "options1": "Glucose",
      "options2": "Sorbitol",
      "options3": "Xylitol",
      "options4": "Mannitol",
      "qsn": "What sweetener is found in plants and can interfere with the metabolism of s. Mutans?",
      "qsnNumber": "372"
    },
    {
      "correctAns": "2",
      "explaination": "130 g/day is the recommended daily allowance for digestible carbohydrates in both healthy adults and children.",
      "mark": "2",
      "options1": "50-100 g/day",
      "options2": "130 g/day",
      "options3": "100-150 g/day",
      "options4": "175 g/day",
      "qsn": "What is the recommended daily allowance for digestible carbohydrates?",
      "qsnNumber": "373"
    },
    {
      "correctAns": "1",
      "explaination": "Both statements are true. Carbohydrates are an energy source for the growth and repair of periodontal tissues. A firm texture of complex carbohydrates may increase circulation in gingival tissue. Firm carbohydrates stimulate the gum tissue during mastication.",
      "mark": "2",
      "options1": "Both statements are true",
      "options2": "The first statement is true, the second statement is false",
      "options3": "The first statement is false, the second statement is true",
      "options4": "Both statements are false",
      "qsn": "Carbohydrates are an energy source for the growth and repair of periodontal tissues. A firm texture of complex carbohydrates may increase circulation in gingival tissue.",
      "qsnNumber": "374"
    },
    {
      "correctAns": "3",
      "explaination": "Yogurt is recommended for lactose intolerant patients, because the lactose is digested by the yogurt. It therefore makes a healthy snack and alternative to other dairy products such as ice cream.",
      "mark": "2",
      "options1": "Both statements are true",
      "options2": "The first statement is true, the second statement is false",
      "options3": "The first statement is false, the second statement is true",
      "options4": "Both statements are false",
      "qsn": "Yogurt is not recommended for lactose intolerant patients. Lactose intolerance may be due to a congenital absence of lactase.",
      "qsnNumber": "375"
    },
    {
      "correctAns": "1",
      "explaination": "Neutrophils are associated with acute inflammation by acting against invading pathogens in the body.",
      "mark": "2",
      "options1": "Neutrophils",
      "options2": "Basophils",
      "options3": "Eosinophils",
      "options4": "Mast cells",
      "qsn": "Which leukocyte is associated with acute inflammation?",
      "qsnNumber": "376"
    },
    {
      "correctAns": "2",
      "explaination": "Naturally passive acquired immunity is when antibodies are passed from one individual to another. An example of this is when the mother passes her immunity on to her child during gestation.",
      "mark": "2",
      "options1": "Naturally active",
      "options2": "Naturally passive",
      "options3": "Artificially active",
      "options4": "Artificially passive",
      "qsn": "If an antibody is produced by an individual and passed on to another, such as a mother to her child, what type of immunity is this?",
      "qsnNumber": "377"
    },
    {
      "correctAns": "1",
      "explaination": "Hepatitis A is transmitted through fecal-oral contamination, such as in contaminated food or water due to poor living conditions or lack of hygiene by food preparers.",
      "mark": "2",
      "options1": "A",
      "options2": "B",
      "options3": "C",
      "options4": "D",
      "qsn": "Which Hepatitis virus is transmitted through a fecal-oral route?",
      "qsnNumber": "378"
    },
    {
      "correctAns": "2",
      "explaination": "Leukopenia is abnormally low levels of white blood cells and is a disease of the WBCs and bone marrow; It should not be confused with leukemia, which is cancer of the bone marrow or WBCs.",
      "mark": "2",
      "options1": "Neutropenia",
      "options2": "Leukopenia",
      "options3": "Leukemia",
      "options4": "Multiple myeloma",
      "qsn": "Which disease of the bone marrow exhibits abnormally low levels of white blood cells (WBCs)?",
      "qsnNumber": "379"
    },
    {
      "correctAns": "4",
      "explaination": "Mucositis is the inflammation and ulceration of mucous membranes that line the digestive tract, including the mucosa of the oral cavity. It is a common side effect in patients undergoing radiation therapy or chemotherapy.",
      "mark": "2",
      "options1": "Candida infections",
      "options2": "Osteoradionecrosis",
      "options3": "Sore throat",
      "options4": "Mucositis",
      "qsn": "What is a common side effect of radiation and or chemotherapy that causes painful inflammation and ulceration of mucous membranes?",
      "qsnNumber": "380"
    },
    {
      "correctAns": "3",
      "explaination": "Endospores are resistant to high temperatures and disinfectants, and may remain viable for an extended amount of time. Endospores are the primary reason for the need of higher levels of temperature during sterilization processes.",
      "mark": "2",
      "options1": "Glycocalyx",
      "options2": "Gram-positive bacteria",
      "options3": "Endospore",
      "options4": "Capsules",
      "qsn": "What microorganism is resistant to high temperatures and disinfectants?",
      "qsnNumber": "381"
    },
    {
      "correctAns": "4",
      "explaination": "Anaerobes require an absence of oxygen in order to survive. Other types of microbes may be able to function without oxygen or with limited oxygen, but anaerobes require ultimate absence of oxygen in order to survive.",
      "mark": "2",
      "options1": "Microaerophiles",
      "options2": "Aerobes",
      "options3": "Facultative anaerobes",
      "options4": "Anaerobes",
      "qsn": "Which of the following microbes cannot perform or may be destroyed in the presence of oxygen?",
      "qsnNumber": "382"
    },
    {
      "correctAns": "2",
      "explaination": "Nondirect contact is the infection transmission that involves touching a contaminated object, such as a touching a used instrument without wearing gloves while transporting it to the sterilization area.",
      "mark": "2",
      "options1": "Direct contact",
      "options2": "Nondirect contact",
      "options3": "Vehicle",
      "options4": "Passive",
      "qsn": "Infection transmission that involves touching a contaminated object is considered:",
      "qsnNumber": "383"
    },
    {
      "correctAns": "4",
      "explaination": "Opportunistic infections are infections that affect immunocompromised persons such as an infant or older adult. This is due to the pathogen taking an &quot;opportunity&quot; when the person&apos;s immune system is compromised. Anyone may suffer from passive, acute or chronic infections.",
      "mark": "2",
      "options1": "Chronic",
      "options2": "Acute",
      "options3": "Passive",
      "options4": "Opportunistic",
      "qsn": "An infection that affects an immunocompromised person is considered:",
      "qsnNumber": "384"
    },
    {
      "correctAns": "2",
      "explaination": "Viruses are the smallest and simplest infectious agent. They contain only RNA or DNA strands.",
      "mark": "2",
      "options1": "Endospores",
      "options2": "Viruses",
      "options3": "Gram-negative bacteria",
      "options4": "Fungi",
      "qsn": "What are the smallest and simplest infectious agents?",
      "qsnNumber": "385"
    },
    {
      "correctAns": "1",
      "explaination": "Antibiotics such as penicillin or amoxicillin are chemotherapeutic compounds that will inhibit or kill bacteria and is produced by a bacterium.",
      "mark": "2",
      "options1": "Antibiotic",
      "options2": "Allergy",
      "options3": "Immunity",
      "options4": "Vaccination",
      "qsn": "What is a natural chemotherapeutic compound that is produced by a bacterium and will inhibit or kill bacteria?",
      "qsnNumber": "386"
    },
    {
      "correctAns": "2",
      "explaination": "Impetigo is a highly infectious condition that can be due to staph or strep infections, leaving pustules and itchy yellow scabs around the mouth and face. It is highly contagious.",
      "mark": "2",
      "options1": "Abscess",
      "options2": "Impetigo",
      "options3": "Human Papillomavirus",
      "options4": "Acne",
      "qsn": "A highly infectious condition that leaves pustules and itchy yellow scabs around the mouth and face is called _______.",
      "qsnNumber": "387"
    },
    {
      "correctAns": "3",
      "explaination": "Pallor of the gingiva is not a symptom of leukemia. Instead, gingiva will appear red and tender to the touch, as well as exhibit bruising and bleeding.",
      "mark": "2",
      "options1": "Abnormal bruising",
      "options2": "Spontaneous sulcular bleeding",
      "options3": "Pallor of the gingiva",
      "options4": "Red gingival tissues",
      "qsn": "Which of the following is NOT a sign of leukemia?",
      "qsnNumber": "388"
    },
    {
      "correctAns": "1",
      "explaination": "Fibrous dysplasia is a bone disease which affects children and involves two types: Monostotic and Polyostotic. Both cause abnormal proliferation of fibrous connective tissues.",
      "mark": "2",
      "options1": "Fibrous dysplasia",
      "options2": "Osteoporosis",
      "options3": "Paget's disease",
      "options4": "Neoplasia",
      "qsn": "What bone disease is most common in children and involves abnormal proliferation of fibrous connective tissues?",
      "qsnNumber": "389"
    },
    {
      "correctAns": "2",
      "explaination": "Squamous cell carcinoma is the most common oral cancer, attributing for approximately 90% of all oral cancer cases.",
      "mark": "2",
      "options1": "Basal cell carcinoma",
      "options2": "Squamous cell carcinoma",
      "options3": "Malignant melanoma",
      "options4": "Pleomorphic adenoma",
      "qsn": "The most common form of oral cancer is:",
      "qsnNumber": "390"
    },
    {
      "correctAns": "4",
      "explaination": "Coronary artery atherosclerosis is associated with periodontal disease. Decreasing periodontal disease symptoms through preventative and maintenance care will reduce the patient&apos;s risk factors.",
      "mark": "2",
      "options1": "Cerebrovascular disease",
      "options2": "Hypertension",
      "options3": "Congestive heart failure",
      "options4": "Coronary artery atherosclerosis",
      "qsn": "Which cardiovascular disease is associated with periodontal disease, placing an emphasis on improving oral health in an attempt to reduce the risk of disease?",
      "qsnNumber": "391"
    },
    {
      "correctAns": "3",
      "explaination": "The first statement is true, the second statement is false. Local anesthetics containing vasoconstrictors should not be given to asthma patients because it may cause reduced oxygen flow in the body, but they may be administered to patients with emphysema.",
      "mark": "2",
      "options1": "Both statements are true",
      "options2": "Both statements are false",
      "options3": "The first statement is true, the second statement is false",
      "options4": "The first statement is false, the second statement is true",
      "qsn": "Local anesthetics containing vasoconstrictors should not be administered to asthma patients. It also should not be used for patients that suffer from emphysema.",
      "qsnNumber": "392"
    },
    {
      "correctAns": "2",
      "explaination": "Petit mal seizures are simple, with jerking motions and no loss of consciousness. The patient is aware of their surroundings and is able to recount the episode without loss of memory.",
      "mark": "2",
      "options1": "Status epilepticus",
      "options2": "Petit mal",
      "options3": "Grand mal",
      "options4": "None of the above",
      "qsn": "What type of seizure exhibits symptoms of jerking motions and no loss of consciousness?",
      "qsnNumber": "393"
    },
    {
      "correctAns": "4",
      "explaination": "Lupus is a chronic disease that displays a &quot;butterfly&quot; pattern over the patient&apos;s face.",
      "mark": "2",
      "options1": "Phemphigus vulgaris",
      "options2": "Hodgkin's lymphoma",
      "options3": "Scleroderma",
      "options4": "Lupus",
      "qsn": "What disease exhibits itself in a classic &quot;butterfly&quot; pattern rash over the patient&apos;s face?",
      "qsnNumber": "394"
    },
    {
      "correctAns": "3",
      "explaination": "Abfractions are the wedge-shaped lesion along the cervical margin of the teeth, usually due to fatigue or flexing of the tooth. The excess flexing causes enamel to chip off of the tooth in this area, exposing the dentin.",
      "mark": "2",
      "options1": "Erosion",
      "options2": "Abrasion",
      "options3": "Abfraction",
      "options4": "Attrition",
      "qsn": "Wedge-shaped lesions along the cervical margin of the teeth are referred to as _________.",
      "qsnNumber": "395"
    },
    {
      "correctAns": "1",
      "explaination": "Pyogenic granulomas is a reactive tissue hyperplasia related to hormonal changes, usually associated with pregnancy. This condition may also be called &quot;pregnancy tumors.&quot;",
      "mark": "2",
      "options1": "Pyogenic granuloma",
      "options2": "Sialolith",
      "options3": "Gingival hyperplasia",
      "options4": "Inflammatory papillary hyperplasia",
      "qsn": "A condition of the oral tissues due to hormonal changes during pregnancy is called ____________.",
      "qsnNumber": "396"
    },
    {
      "correctAns": "2",
      "explaination": "Amalgam tattoos are bluish discolorations of the oral mucosa due to leaking of particles from an amalgam filling directly into the mucosa. Therefore they may appear radiopaque on a radiograph.",
      "mark": "2",
      "options1": "Traumatic neuroma",
      "options2": "Amalgam tattoo",
      "options3": "Necrotizing sialometaplasia",
      "options4": "Melanoma",
      "qsn": "A discoloration of the oral mucosa that may have a radiopaque appearance.",
      "qsnNumber": "397"
    },
    {
      "correctAns": "4",
      "explaination": "Eruption cysts usually involve primary tooth eruption and exhibit bluish tissue with swelling around the erupting tooth, hence the term &quot;eruption cyst.&quot;",
      "mark": "2",
      "options1": "Odontogenic keratocyst",
      "options2": "Dentigerous cyst",
      "options3": "Nonodontogenic cysts",
      "options4": "Eruption cyst",
      "qsn": "Which cyst exhibits bluish swelling around a newly erupting crown, most common with the eruption of primary teeth?",
      "qsnNumber": "398"
    },
    {
      "correctAns": "1",
      "explaination": "Both statements are true. Supernumerary teeth typically exhibit microdontia (small in size) and are in the maxilla, typically distal to the 3rd molars or between the upper central incisors.",
      "mark": "2",
      "options1": "Both statements are true",
      "options2": "Both statements are false",
      "options3": "The first statement is true, the second statement is false",
      "options4": "The first statement is false, the second statement is true",
      "qsn": "Supernumerary teeth usually exhibit microdontia. They are most commonly found in the maxilla.",
      "qsnNumber": "399"
    },
    {
      "correctAns": "2",
      "explaination": "Enamel pearls are projections of an exophytic area of enamel on the surface of a root. The area appears as a small round &quot;pearl&quot; of enamel on the surface where enamel isn&apos;t normally found.",
      "mark": "2",
      "options1": "Dens in dente",
      "options2": "Enamel pearl",
      "options3": "Enamel hypoplasia",
      "options4": "Gemination",
      "qsn": "Which of the following is an exophytic area of enamel on the root surface?",
      "qsnNumber": "400"
    },
    {
      "correctAns": "1",
      "explaination": "Root structure is more likely to demineralize because of a high pH. Enamel demineralizes at a pH of 4.5-5.5. This makes the root surface more susceptible to decay.",
      "mark": "2",
      "options1": "4.5-5.5",
      "options2": "5.5-5.9",
      "options3": "6.0-6.7",
      "options4": "6.5-7.4",
      "qsn": "At what pH is a root demineralized?",
      "qsnNumber": "440"
    },
    {
      "correctAns": "3",
      "explaination": "Exogenous stains originate from the outside of a tooth. Endogenous stains, such as tetracycline or tooth trauma, originate from inside the tooth.",
      "mark": "2",
      "options1": "Intrinsic",
      "options2": "Extrinsic",
      "options3": "Exogenous",
      "options4": "Endogenous",
      "qsn": "Tobacco is considered what type of stain?",
      "qsnNumber": "441"
    },
    {
      "correctAns": "2",
      "explaination": "Angular cheilitis is a fungal infection that can be treated with an anti-fungal medication. The other conditions cannot be treated with medications. They will not respond to therapeutic therapies.",
      "mark": "2",
      "options1": "Bone cyst",
      "options2": "Angular cheilitis",
      "options3": "Fordyce granules",
      "options4": "Paget disease",
      "qsn": "Which of the following conditions would respond to therapeutic diagnosis?",
      "qsnNumber": "442"
    },
    {
      "correctAns": "2",
      "explaination": "Dental biofilm is a yellow mass of bacteria that when uncontrolled, can cause dental caries or periodontal infections.",
      "mark": "2",
      "options1": "Acquired pellicle",
      "options2": "Biofilm",
      "options3": "Demineralization",
      "options4": "Plaque",
      "qsn": "A dense, nonmineralized complex mass of bacteria that forms a gel like matrix:",
      "qsnNumber": "443"
    },
    {
      "correctAns": "3",
      "explaination": "Iron is not a major component of saliva. However, there are trace amounts of the mineral that are found in saliva. A lack of iron in your diet could cause: angular cheilosis, burning tongue, or glossitis",
      "mark": "2",
      "options1": "Calcium",
      "options2": "Phosphate",
      "options3": "Iron",
      "options4": "Fluoride",
      "qsn": "Which of the following is not a major component of saliva that helps protect against dental caries?",
      "qsnNumber": "444"
    },
    {
      "correctAns": "4",
      "explaination": "The IA nerve innervates the pulp of the teeth. The long buccal and the mental nerve bring supply to the surrounding tissues and tongue.",
      "mark": "2",
      "options1": "Mental",
      "options2": "Long Buccal",
      "options3": "Posterior Superior Alveolar",
      "options4": "Inferior Alveolar",
      "qsn": "Which nerve innervates the tooth pulp on the mandible?",
      "qsnNumber": "445"
    },
    {
      "correctAns": "4",
      "explaination": "Warton&apos;s is a duct that is part of the submandibular gland. It is an opening for saliva and is not a major salivary gland.",
      "mark": "2",
      "options1": "Submandibular",
      "options2": "Sublingual",
      "options3": "Parotid",
      "options4": "Wharton",
      "qsn": "Which of the following is not a major salivary gland?",
      "qsnNumber": "447"
    },
    {
      "correctAns": "2",
      "explaination": "Drugs with a high-first past effect have a LARGER oral to parental dose ratio.",
      "mark": "2",
      "options1": "TRUE",
      "options2": "False, they have a larger parental dose ratio.",
      "options3": "False, they have the same parental dose ratio.",
      "options4": "False, drugs do not have a high-first past effect.",
      "qsn": "Drugs with a high-first past effect have a smaller oral to parental dose ratio.",
      "qsnNumber": "448"
    },
    {
      "correctAns": "2",
      "explaination": "Pharmacokinetics is the movement of a drug in your body, once it is administered. Pharmacodynamics is the study of effects the drug has on your body",
      "mark": "2",
      "options1": "Pharmacology",
      "options2": "Pharmacokinetics",
      "options3": "Pharmacodynamics",
      "options4": "Pharmaceuticals",
      "qsn": "What is the study of how a drug is absorbed, distributed, metabolized and excreted by the body?",
      "qsnNumber": "449"
    },
    {
      "correctAns": "1",
      "explaination": "Metabolism will be impaired in relation to the severity of the damage to the liver. A nonfunctioning liver could result in possible toxicity. The metabolism of drugs by means of enzyme reactions, is mostly completed in the liver.",
      "mark": "2",
      "options1": "TRUE",
      "options2": "False, only current substance use affects the metabolism of a drug.",
      "options3": "False, only previous substance abuse affects the metabolism of a drug.",
      "options4": "False, liver disease does not affect the metabolism of a drug.",
      "qsn": "Liver disease or previous or current substance abuse may impair the metabolism of a drug.",
      "qsnNumber": "450"
    },
    {
      "correctAns": "2",
      "explaination": "The cap stage is the second stage in tooth development. The first is the bud stage where the formation begins. The last stage is the bell stage, where the tissue form and the tooth shape is established.",
      "mark": "2",
      "options1": "Bell",
      "options2": "Cap",
      "options3": "Bud",
      "options4": "Embryotic",
      "qsn": "The _______ stage of development is when the first signs of an arrangement of cells occur.",
      "qsnNumber": "451"
    },
    {
      "correctAns": "2",
      "explaination": "Endoplasmic or endoplasmic reticulum is found throughout a cell and connected to the nucleus. It is not a tissue in the body, but is an important part of cell.",
      "mark": "2",
      "options1": "Connective",
      "options2": "Endoplasmic",
      "options3": "Muscle",
      "options4": "Nerve",
      "qsn": "Which of the following is not a type of tissue found in the body?",
      "qsnNumber": "452"
    },
    {
      "correctAns": "1",
      "explaination": "Interradicular fibers are not part of the gingival fiber group. It is actually a reference to the fibers from the cementum and between the roots of teeth to the adjacent bone.",
      "mark": "2",
      "options1": "Interradicular",
      "options2": "Dentogingival",
      "options3": "Alveologingival",
      "options4": "Circumferential",
      "qsn": "All of the following are part of the gingival fiber group except:",
      "qsnNumber": "453"
    },
    {
      "correctAns": "4",
      "explaination": "Vitamin K is the catalyst for blood clotting. It is derived from food sources in our gut.",
      "mark": "2",
      "options1": "Vitamin A",
      "options2": "Vitamin E",
      "options3": "Vitamin D",
      "options4": "Vitamin K",
      "qsn": "This vitamin is the catalyst for synthesis of blood clotting:",
      "qsnNumber": "454"
    },
    {
      "correctAns": "1",
      "explaination": "Pellagra is caused by a chronic lack of the Vitamin B3. It can cause diarrhea, dermatitis and can lead to mental disturbance.",
      "mark": "2",
      "options1": "Pellagra",
      "options2": "Scurvy",
      "options3": "Enamel Mottling",
      "options4": "Sickle Cell Anemia",
      "qsn": "A deficiency in Vitamin B3 (Niacin) can lead to what disease?",
      "qsnNumber": "455"
    },
    {
      "correctAns": "2",
      "explaination": "Peas are rich in vitamin B. Cheese, tofu and kale are all excellent sources of calcium and should be considered when a patient is under nutritional counseling.",
      "mark": "2",
      "options1": "Cheese",
      "options2": "Peas",
      "options3": "Tofu",
      "options4": "Kale",
      "qsn": "Which of the following is not considered a form of calcium?",
      "qsnNumber": "456"
    },
    {
      "correctAns": "3",
      "explaination": "Bidigital palpation is accomplished by using your finger and thumb of both hands. This technique is used to compress and palpate tissue during an extra oral exam.",
      "mark": "2",
      "options1": "Bilateral palpation",
      "options2": "Digital palpation",
      "options3": "Bidigital palpation",
      "options4": "Bimanual palpation",
      "qsn": "What palpation method is used during an extra oral exam that uses the finger and thumbs of both hands?",
      "qsnNumber": "457"
    },
    {
      "correctAns": "1",
      "explaination": "Subluxation is the clinical term for dislocation. This can be caused by long dental procedures, which stretch the ligaments around the joint, making it easy for the condyle to dislocate. It is important to inform your patients that they should restrict large movements after long dental procedures.",
      "mark": "2",
      "options1": "Both statements are true",
      "options2": "Both statements are false",
      "options3": "First statement is true. Second statement is false.",
      "options4": "First statement is false. Second statement is true.",
      "qsn": "Subluxation is when the condyle of the temporal mandibular joint glides beyond the eminence preventing the jaw from closing. Subluxation can be caused by long dental procedures.",
      "qsnNumber": "458"
    },
    {
      "correctAns": "4",
      "explaination": "Vitamin C helps the lining of the gums stay healthy. When a person, especially a smoker, is deficient in this vitamin, the lining is susceptible to bacterial infections, potentially leading to periodontal disease.",
      "mark": "2",
      "options1": "Vitamin A",
      "options2": "Vitamin B3",
      "options3": "Vitamin B6",
      "options4": "Vitamin C",
      "qsn": "Periodontal disease can be more severe in patients that smoke when they are deficient in this vitamin:",
      "qsnNumber": "459"
    },
    {
      "correctAns": "1",
      "explaination": "Cleft lip begins to develop between the 4th and 7th weeks of the first trimester. It becomes evident during the second month of pregnancy.",
      "mark": "2",
      "options1": "Cleft Lip",
      "options2": "Cleft Palate",
      "options3": "Cleft Nasal",
      "options4": "Cleft Mandible",
      "qsn": "What happens when the globular process fails to fuse with the maxillary process during the first trimester of pregnancy?",
      "qsnNumber": "460"
    },
    {
      "correctAns": "1",
      "explaination": "Collagen fibers become mineralized and incorporated into the cementum. In teeth, the fibers that are the terminal ends of the principal fibers, that insert into the cementum and into the periosteum of the avelor bone are called Sharpey&apos;s fibers.",
      "mark": "2",
      "options1": "Both statements are true.",
      "options2": "Both statements are false.",
      "options3": "First statement is true. Second statement is false.",
      "options4": "First statement is false. Second statement is true.",
      "qsn": "Cementum contains collagen fibers. In teeth, Sharpey&apos;s fibers are the terminal ends of the principal fibers that insert into the cementum and into the periosteum of the avelor bone.",
      "qsnNumber": "461"
    },
    {
      "correctAns": "3",
      "explaination": "The sagittal plane runs down the midline of our body, creating the left and right side. The Parasagittal plane means any plane that runs parallel to the sagittal plane.",
      "mark": "2",
      "options1": "Axial",
      "options2": "Parasagittal",
      "options3": "Sagittal",
      "options4": "Transverse",
      "qsn": "What plane divides the body into left and right halves?",
      "qsnNumber": "462"
    },
    {
      "correctAns": "1",
      "explaination": "The mandibular central incisors are the smallest permanent tooth in the oral cavity. They are the smallest due to the fact that they have a very slight concavity with labial surfaces that are smooth.",
      "mark": "2",
      "options1": "Mandibular central incisors",
      "options2": "Maxillary canine tooth",
      "options3": "Mandibular lateral incisor",
      "options4": "Maxillary lateral incisor",
      "qsn": "What is the smallest permanent tooth in the mouth?",
      "qsnNumber": "463"
    },
    {
      "correctAns": "4",
      "explaination": "Both pharyngeal and esophageal phases of swallowing are under involuntary neuromuscular control. They are both considered involuntary reflex of muscles that allow us to swallow our food fast and easy, causing little harm to surrounding organs.",
      "mark": "2",
      "options1": "Both statements are true.",
      "options2": "Both statements are false.",
      "options3": "First statement is true. Second statement is false.",
      "options4": "First statement is false. Second statement is true.",
      "qsn": "During swallowing, the esophageal phase is under voluntary neuromuscular control. The pharyngeal phase is under involuntary neuromuscular control.",
      "qsnNumber": "464"
    },
    {
      "correctAns": "1",
      "explaination": "A psuedopocket is due to gingival enlargement and does not involve the migration of connective tissue attachment and other supporting periodontal tissues.",
      "mark": "2",
      "options1": "Both statements are true.",
      "options2": "Both statements are false.",
      "options3": "First statement is true. Second statement is false.",
      "options4": "First statement is false. Second statement is true.",
      "qsn": "A psuedopocket is produced by edematous gingival tissue. The junction epithelium does not migrate when there is psuedopocketing.",
      "qsnNumber": "465"
    },
    {
      "correctAns": "1",
      "explaination": "Mesognathic is when your jaw slightly protrudes in its resting state. This is considered a normal facial profile.",
      "mark": "2",
      "options1": "Both statements are true.",
      "options2": "Both statements are false.",
      "options3": "First statement is true. Second statement is false.",
      "options4": "First statement is false. Second statement is true.",
      "qsn": "A patient with a Class I occlusion would have a facial profile that is mesognathic. Mesognathic is considered to be a normal profile.",
      "qsnNumber": "466"
    }
  ],
  "users": "users"
}
